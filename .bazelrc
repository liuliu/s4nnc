common:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
common:cuda --define=using_cuda=true --define=using_cuda_nvcc=true

common:cuda_clang --crosstool_top=@local_config_cuda//crosstool:toolchain
common:cuda_clang --define=using_cuda=true --define=using_cuda_clang=true

common:win-cuda --define=using_cuda=true --define=using_cuda_nvcc=true

build --action_env TF_NEED_CUDA="1"
build --action_env TF_NEED_OPENCL="1"
build --action_env TF_CUDA_CLANG="0"
build --action_env HOST_CXX_COMPILER="/usr/local/bin/clang"
build --action_env HOST_C_COMPILER="/usr/local/bin/clang"
build --action_env CLANG_CUDA_COMPILER_PATH="/usr/local/bin/clang"
build --action_env GCC_HOST_COMPILER_PATH="/usr/local/bin/clang"

build --action_env CUDA_TOOLKIT_PATH="/usr/local/cuda"
build --action_env TF_CUDA_VERSION="11.6"
build --action_env TF_CUDA_COMPUTE_CAPABILITIES="7.5"
build --action_env COMPUTECPP_TOOLKIT_PATH="/usr/local/computecpp"
build --action_env TMP="/tmp"
build --action_env TF_CUDNN_VERSION="8"
build --action_env CUDNN_INSTALL_PATH="/usr"
build --action_env TF_NCCL_VERSION="2"
build --action_env NCCL_INSTALL_PATH="/usr"

common --disk_cache=.cache

try-import %workspace%/clang.bazelrc
try-import %workspace%/.bazelrc.local
