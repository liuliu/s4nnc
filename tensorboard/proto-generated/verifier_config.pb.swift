// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: tensorboard/compat/proto/verifier_config.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _3: SwiftProtobuf.ProtobufAPIVersion_3 {}
  typealias Version = _3
}

/// The config for graph verifiers.
struct Tensorboard_VerifierConfig {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  /// Deadline for completion of all verification i.e. all the Toggle ON
  /// verifiers must complete execution within this time.
  var verificationTimeoutInMs: Int64 = 0

  /// Perform structural validation on a tensorflow graph. Default is OFF.
  var structureVerifier: Tensorboard_VerifierConfig.Toggle = .default

  var unknownFields = SwiftProtobuf.UnknownStorage()

  enum Toggle: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case `default` // = 0
    case on // = 1
    case off // = 2
    case UNRECOGNIZED(Int)

    init() {
      self = .default
    }

    init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .default
      case 1: self = .on
      case 2: self = .off
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    var rawValue: Int {
      switch self {
      case .default: return 0
      case .on: return 1
      case .off: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

    // The compiler won't synthesize support with the UNRECOGNIZED case.
    static var allCases: [Tensorboard_VerifierConfig.Toggle] = [
      .default,
      .on,
      .off,
    ]

  }

  init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Tensorboard_VerifierConfig: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "tensorboard"

extension Tensorboard_VerifierConfig: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".VerifierConfig"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "verification_timeout_in_ms"),
    2: .standard(proto: "structure_verifier"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularInt64Field(value: &self.verificationTimeoutInMs) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.structureVerifier) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.verificationTimeoutInMs != 0 {
      try visitor.visitSingularInt64Field(value: self.verificationTimeoutInMs, fieldNumber: 1)
    }
    if self.structureVerifier != .default {
      try visitor.visitSingularEnumField(value: self.structureVerifier, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Tensorboard_VerifierConfig, rhs: Tensorboard_VerifierConfig) -> Bool {
    if lhs.verificationTimeoutInMs != rhs.verificationTimeoutInMs {return false}
    if lhs.structureVerifier != rhs.structureVerifier {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Tensorboard_VerifierConfig.Toggle: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "DEFAULT"),
    1: .same(proto: "ON"),
    2: .same(proto: "OFF"),
  ]
}
