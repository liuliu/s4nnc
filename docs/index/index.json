{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/ant\/init(ctrlcostweight:healthyreward:terminatewhenunhealthy:healthyzrange:resetnoisescale:)","title":"init(ctrlCostWeight: Double, healthyReward: Double, terminateWhenUnhealthy: Bool, healthyZRange: ClosedRange<Double>, resetNoiseScale: Double) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/ant\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/ant\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/ant\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/ant\/reset(seed:)","title":"func reset(seed: Int?) -> (Ant.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/ant\/step(action:)","title":"func step(action: Ant.ActType) -> (Ant.ObsType, Ant.RewardType, Ant.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/ant\/acttype","title":"Ant.ActType","type":"typealias"},{"path":"\/documentation\/gym\/ant\/obstype","title":"Ant.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/ant\/rewardtype","title":"Ant.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/ant\/terminatedtype","title":"Ant.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/ant\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/ant\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/ant\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/ant\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/ant","title":"Ant","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/httprenderserver\/init(_:streamkey:maxwidth:maxheight:maxframerate:canresize:numberofthreads:)","title":"init(any HTTPRenderProvider, streamKey: String?, maxWidth: Int, maxHeight: Int, maxFrameRate: Int, canResize: Bool, numberOfThreads: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/httprenderserver\/html","title":"var html: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/httprenderserver\/bind(host:port:)","title":"func bind(host: String, port: Int) -> EventLoopFuture<any Channel>","type":"method"}],"path":"\/documentation\/gym\/httprenderserver","title":"HTTPRenderServer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/halfcheetah\/init(forwardrewardweight:ctrlcostweight:resetnoisescale:)","title":"init(forwardRewardWeight: Double, ctrlCostWeight: Double, resetNoiseScale: Double) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/halfcheetah\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/halfcheetah\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/halfcheetah\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/halfcheetah\/reset(seed:)","title":"func reset(seed: Int?) -> (HalfCheetah.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/halfcheetah\/step(action:)","title":"func step(action: HalfCheetah.ActType) -> (HalfCheetah.ObsType, HalfCheetah.RewardType, HalfCheetah.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/halfcheetah\/acttype","title":"HalfCheetah.ActType","type":"typealias"},{"path":"\/documentation\/gym\/halfcheetah\/obstype","title":"HalfCheetah.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/halfcheetah\/rewardtype","title":"HalfCheetah.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/halfcheetah\/terminatedtype","title":"HalfCheetah.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/halfcheetah\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/halfcheetah\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/halfcheetah\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/halfcheetah\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/halfcheetah","title":"HalfCheetah","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/hopper\/init(forwardrewardweight:ctrlcostweight:healthyreward:terminatewhenunhealthy:healthystaterange:healthyzrange:healthyanglerange:resetnoisescale:)","title":"init(forwardRewardWeight: Double, ctrlCostWeight: Double, healthyReward: Double, terminateWhenUnhealthy: Bool, healthyStateRange: ClosedRange<Double>, healthyZRange: ClosedRange<Double>, healthyAngleRange: ClosedRange<Double>, resetNoiseScale: Double) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/hopper\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/hopper\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/hopper\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/hopper\/reset(seed:)","title":"func reset(seed: Int?) -> (Hopper.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/hopper\/step(action:)","title":"func step(action: Hopper.ActType) -> (Hopper.ObsType, Hopper.RewardType, Hopper.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/hopper\/acttype","title":"Hopper.ActType","type":"typealias"},{"path":"\/documentation\/gym\/hopper\/obstype","title":"Hopper.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/hopper\/rewardtype","title":"Hopper.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/hopper\/terminatedtype","title":"Hopper.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/hopper\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/hopper\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/hopper\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/hopper\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/hopper","title":"Hopper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/humanoid\/init(forwardrewardweight:ctrlcostweight:healthyreward:terminatewhenunhealthy:healthyzrange:resetnoisescale:)","title":"init(forwardRewardWeight: Double, ctrlCostWeight: Double, healthyReward: Double, terminateWhenUnhealthy: Bool, healthyZRange: ClosedRange<Double>, resetNoiseScale: Double) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/humanoid\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/humanoid\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/humanoid\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/humanoid\/reset(seed:)","title":"func reset(seed: Int?) -> (Humanoid.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/humanoid\/step(action:)","title":"func step(action: Humanoid.ActType) -> (Humanoid.ObsType, Humanoid.RewardType, Humanoid.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/humanoid\/acttype","title":"Humanoid.ActType","type":"typealias"},{"path":"\/documentation\/gym\/humanoid\/obstype","title":"Humanoid.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/humanoid\/rewardtype","title":"Humanoid.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/humanoid\/terminatedtype","title":"Humanoid.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/humanoid\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/humanoid\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/humanoid\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/humanoid\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/humanoid","title":"Humanoid","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/inverteddoublependulum\/init()","title":"init() throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/inverteddoublependulum\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/inverteddoublependulum\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/inverteddoublependulum\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/inverteddoublependulum\/reset(seed:)","title":"func reset(seed: Int?) -> (InvertedDoublePendulum.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/inverteddoublependulum\/step(action:)","title":"func step(action: InvertedDoublePendulum.ActType) -> (InvertedDoublePendulum.ObsType, InvertedDoublePendulum.RewardType, InvertedDoublePendulum.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/inverteddoublependulum\/acttype","title":"InvertedDoublePendulum.ActType","type":"typealias"},{"path":"\/documentation\/gym\/inverteddoublependulum\/obstype","title":"InvertedDoublePendulum.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/inverteddoublependulum\/rewardtype","title":"InvertedDoublePendulum.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/inverteddoublependulum\/terminatedtype","title":"InvertedDoublePendulum.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/inverteddoublependulum\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/inverteddoublependulum\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/inverteddoublependulum\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/inverteddoublependulum\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/inverteddoublependulum","title":"InvertedDoublePendulum","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/invertedpendulum\/init()","title":"init() throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/invertedpendulum\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/invertedpendulum\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/invertedpendulum\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/invertedpendulum\/reset(seed:)","title":"func reset(seed: Int?) -> (InvertedPendulum.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/invertedpendulum\/step(action:)","title":"func step(action: InvertedPendulum.ActType) -> (InvertedPendulum.ObsType, InvertedPendulum.RewardType, InvertedPendulum.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/invertedpendulum\/acttype","title":"InvertedPendulum.ActType","type":"typealias"},{"path":"\/documentation\/gym\/invertedpendulum\/obstype","title":"InvertedPendulum.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/invertedpendulum\/rewardtype","title":"InvertedPendulum.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/invertedpendulum\/terminatedtype","title":"InvertedPendulum.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/invertedpendulum\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/invertedpendulum\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/invertedpendulum\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/invertedpendulum\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/invertedpendulum","title":"InvertedPendulum","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/mujocoviewer\/init(env:width:height:title:)","title":"init(env: EnvType, width: Int, height: Int, title: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/mujocoviewer\/render()","title":"func render()","type":"method"}],"path":"\/documentation\/gym\/mujocoviewer\/renderable-implementations","title":"Renderable Implementations","type":"symbol"}],"path":"\/documentation\/gym\/mujocoviewer","title":"MuJoCoViewer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/swimmer\/init(forwardrewardweight:ctrlcostweight:resetnoisescale:)","title":"init(forwardRewardWeight: Double, ctrlCostWeight: Double, resetNoiseScale: Double) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/swimmer\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/swimmer\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/swimmer\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/swimmer\/reset(seed:)","title":"func reset(seed: Int?) -> (Swimmer.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/swimmer\/step(action:)","title":"func step(action: Swimmer.ActType) -> (Swimmer.ObsType, Swimmer.RewardType, Swimmer.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/swimmer\/acttype","title":"Swimmer.ActType","type":"typealias"},{"path":"\/documentation\/gym\/swimmer\/obstype","title":"Swimmer.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/swimmer\/rewardtype","title":"Swimmer.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/swimmer\/terminatedtype","title":"Swimmer.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/swimmer\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/swimmer\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/swimmer\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/swimmer\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/swimmer","title":"Swimmer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/timelimit\/init(env:maxepisodesteps:)","title":"init(env: EnvType, maxEpisodeSteps: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/timelimit\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/timelimit\/reset(seed:)","title":"func reset(seed: Int?) -> (TimeLimit<EnvType>.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/timelimit\/step(action:)","title":"func step(action: TimeLimit<EnvType>.ActType) -> (TimeLimit<EnvType>.ObsType, TimeLimit<EnvType>.RewardType, TimeLimit<EnvType>.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/timelimit\/acttype","title":"TimeLimit.ActType","type":"typealias"},{"path":"\/documentation\/gym\/timelimit\/obstype","title":"TimeLimit.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/timelimit\/rewardtype","title":"TimeLimit.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/timelimit\/terminatedtype","title":"TimeLimit.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/timelimit\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/timelimit\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/timelimit\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/timelimit\/env-implementations","title":"Env Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/timelimit\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/timelimit\/model","title":"var model: MjModel","type":"property"}],"path":"\/documentation\/gym\/timelimit\/mujocoenv-implementations","title":"MuJoCoEnv Implementations","type":"symbol"}],"path":"\/documentation\/gym\/timelimit","title":"TimeLimit","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/vecenv\/init(count:_:)","title":"init(count: Int, (Int) throws -> EnvType) rethrows","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/vecenv\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/vecenv\/reset(seed:)","title":"func reset(seed: Int?) -> (VecEnv<EnvType, Element>.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/vecenv\/step(action:)","title":"func step(action: VecEnv<EnvType, Element>.ActType) -> (VecEnv<EnvType, Element>.ObsType, VecEnv<EnvType, Element>.RewardType, VecEnv<EnvType, Element>.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/vecenv\/acttype","title":"VecEnv.ActType","type":"typealias"},{"path":"\/documentation\/gym\/vecenv\/obstype","title":"VecEnv.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/vecenv\/rewardtype","title":"VecEnv.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/vecenv\/terminatedtype","title":"VecEnv.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/vecenv\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/vecenv\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/vecenv\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/vecenv\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/vecenv","title":"VecEnv","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/walker2d\/init(forwardrewardweight:ctrlcostweight:healthyreward:terminatewhenunhealthy:healthyzrange:healthyanglerange:resetnoisescale:)","title":"init(forwardRewardWeight: Double, ctrlCostWeight: Double, healthyReward: Double, terminateWhenUnhealthy: Bool, healthyZRange: ClosedRange<Double>, healthyAngleRange: ClosedRange<Double>, resetNoiseScale: Double) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/walker2d\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/walker2d\/model","title":"let model: MjModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/walker2d\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/walker2d\/reset(seed:)","title":"func reset(seed: Int?) -> (Walker2D.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/walker2d\/step(action:)","title":"func step(action: Walker2D.ActType) -> (Walker2D.ObsType, Walker2D.RewardType, Walker2D.TerminatedType, [String : Any])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/walker2d\/acttype","title":"Walker2D.ActType","type":"typealias"},{"path":"\/documentation\/gym\/walker2d\/obstype","title":"Walker2D.ObsType","type":"typealias"},{"path":"\/documentation\/gym\/walker2d\/rewardtype","title":"Walker2D.RewardType","type":"typealias"},{"path":"\/documentation\/gym\/walker2d\/terminatedtype","title":"Walker2D.TerminatedType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/walker2d\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/walker2d\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/walker2d\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/walker2d\/env-implementations","title":"Env Implementations","type":"symbol"}],"path":"\/documentation\/gym\/walker2d","title":"Walker2D","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/gym\/env\/acttype","title":"ActType","type":"associatedtype"},{"path":"\/documentation\/gym\/env\/obstype","title":"ObsType","type":"associatedtype"},{"path":"\/documentation\/gym\/env\/rewardtype","title":"RewardType","type":"associatedtype"},{"path":"\/documentation\/gym\/env\/terminatedtype","title":"TerminatedType","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/env\/reset()","title":"func reset() -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/env\/reset(seed:)","title":"func reset(seed: Int?) -> (Self.ObsType, [String : Any])","type":"method"},{"path":"\/documentation\/gym\/env\/step(action:)","title":"func step(action: Self.ActType) -> (Self.ObsType, Self.RewardType, Self.TerminatedType, [String : Any])","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/env\/actionspace","title":"static var actionSpace: [ClosedRange<Float>]","type":"property"},{"path":"\/documentation\/gym\/env\/rewardthreshold","title":"static var rewardThreshold: Float","type":"property"},{"path":"\/documentation\/gym\/env\/statesize","title":"static var stateSize: Int","type":"property"}],"path":"\/documentation\/gym\/env","title":"Env","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/httprenderprovider\/rendercontextcallback","title":"var renderContextCallback: ((inout MjrContext, Int32, Int32) -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/httprenderprovider\/sendevent(_:)","title":"func sendEvent(GLContext.Event)","type":"method"}],"path":"\/documentation\/gym\/httprenderprovider","title":"HTTPRenderProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/mujocoenv\/data","title":"var data: MjData","type":"property"},{"path":"\/documentation\/gym\/mujocoenv\/model","title":"var model: MjModel","type":"property"}],"path":"\/documentation\/gym\/mujocoenv","title":"MuJoCoEnv","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/renderable\/render()","title":"func render()","type":"method"}],"path":"\/documentation\/gym\/renderable","title":"Renderable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/collecteddata\/init(lastobservation:)","title":"init(lastObservation: CollectedData<Element, StateType>.ObsType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/collecteddata\/envstate-swift.property","title":"var envState: CollectedData<Element, StateType>.EnvState","type":"property"},{"path":"\/documentation\/gym\/collecteddata\/episodelength","title":"var episodeLength: Int","type":"property"},{"path":"\/documentation\/gym\/collecteddata\/episodereward","title":"var episodeReward: Float","type":"property"},{"path":"\/documentation\/gym\/collecteddata\/lastobservation","title":"var lastObservation: CollectedData<Element, StateType>.ObsType","type":"property"},{"path":"\/documentation\/gym\/collecteddata\/rewards","title":"var rewards: [Float]","type":"property"},{"path":"\/documentation\/gym\/collecteddata\/states","title":"var states: [StateType]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/collecteddata\/acttype","title":"CollectedData.ActType","type":"typealias"},{"path":"\/documentation\/gym\/collecteddata\/obstype","title":"CollectedData.ObsType","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/gym\/collecteddata\/envstate-swift.enum\/ready","title":"case ready","type":"case"},{"path":"\/documentation\/gym\/collecteddata\/envstate-swift.enum\/terminated","title":"case terminated","type":"case"},{"path":"\/documentation\/gym\/collecteddata\/envstate-swift.enum\/truncated","title":"case truncated","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/gym\/collecteddata\/envstate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/gym\/collecteddata\/envstate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/gym\/collecteddata\/envstate-swift.enum","title":"CollectedData.EnvState","type":"enum"}],"path":"\/documentation\/gym\/collecteddata","title":"CollectedData","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/collector\/statistics\/episodecount","title":"var episodeCount: Int","type":"property"},{"path":"\/documentation\/gym\/collector\/statistics\/episodelength","title":"var episodeLength: NumericalStatistics","type":"property"},{"path":"\/documentation\/gym\/collector\/statistics\/episodereward","title":"var episodeReward: NumericalStatistics","type":"property"},{"path":"\/documentation\/gym\/collector\/statistics\/stepcount","title":"var stepCount: Int","type":"property"}],"path":"\/documentation\/gym\/collector\/statistics","title":"Collector.Statistics","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/collector\/init(envs:policy:)","title":"init(envs: [EnvType], policy: (Collector<Element, StateType, EnvType, EnvElement>.ObsType) -> (Collector<Element, StateType, EnvType, EnvElement>.ActType, StateType))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/collector\/data","title":"var data: [CollectedData<Element, StateType>]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/collector\/collect(nstep:)","title":"func collect(nStep: Int) -> Collector<Element, StateType, EnvType, EnvElement>.Statistics","type":"method"},{"path":"\/documentation\/gym\/collector\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/gym\/collector\/resetdata(keeplastn:)","title":"func resetData(keepLastN: Int)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/gym\/collector\/acttype","title":"Collector.ActType","type":"typealias"},{"path":"\/documentation\/gym\/collector\/obstype","title":"Collector.ObsType","type":"typealias"}],"path":"\/documentation\/gym\/collector","title":"Collector","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/numericalstatistics\/init(_:)","title":"init<C>(C)","type":"init"},{"path":"\/documentation\/gym\/numericalstatistics\/init(mean:std:)","title":"init(mean: Float, std: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/numericalstatistics\/mean","title":"var mean: Float","type":"property"},{"path":"\/documentation\/gym\/numericalstatistics\/std","title":"var std: Float","type":"property"}],"path":"\/documentation\/gym\/numericalstatistics","title":"NumericalStatistics","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/cliploss\/init(epsilon:entropycoefficient:)","title":"init(epsilon: Float, entropyCoefficient: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/cliploss\/entropycoefficient","title":"var entropyCoefficient: Float","type":"property"},{"path":"\/documentation\/gym\/ppo\/cliploss\/epsilon","title":"var epsilon: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/cliploss\/callasfunction(_:oldaction:olddistribution:advantages:scale:)","title":"func callAsFunction<T>(T, oldAction: T, oldDistribution: T, advantages: T, scale: T) -> T","type":"method"}],"path":"\/documentation\/gym\/ppo\/cliploss","title":"PPO.ClipLoss","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/continuousstate\/init(centroid:action:observation:)","title":"init(centroid: Tensor<Float>, action: Tensor<Float>, observation: Tensor<Float>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/continuousstate\/action","title":"var action: Tensor<Float>","type":"property"},{"path":"\/documentation\/gym\/ppo\/continuousstate\/centroid","title":"var centroid: Tensor<Float>","type":"property"},{"path":"\/documentation\/gym\/ppo\/continuousstate\/observation","title":"var observation: Tensor<Float>","type":"property"}],"path":"\/documentation\/gym\/ppo\/continuousstate","title":"PPO.ContinuousState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/statistics-swift.struct\/rewardsnormalization","title":"var rewardsNormalization: NumericalStatistics","type":"property"}],"path":"\/documentation\/gym\/ppo\/statistics-swift.struct","title":"PPO.Statistics","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/init(graph:critic:)","title":"init(graph: DynamicGraph, critic: (Tensor<Float>) -> Tensor<Float>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/statistics-swift.property","title":"var statistics: PPO.Statistics","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/computereturns(from:)","title":"func computeReturns(from: [CollectedData<Float, PPO.ContinuousState>]) -> (returns: [[Float]], advantages: [[Float]])","type":"method"},{"path":"\/documentation\/gym\/ppo\/distributions(scale:from:)","title":"func distributions(scale: Tensor<Float>, from: [CollectedData<Float, PPO.ContinuousState>]) -> [[Tensor<Float>]]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/ppo\/samples(from:episodecount:using:returns:advantages:olddistributions:)","title":"static func samples<T>(from: [CollectedData<Float, PPO.ContinuousState>], episodeCount: Int, using: inout T, returns: [[Float]], advantages: [[Float]], oldDistributions: [[Tensor<Float>]]) -> DataFrame","type":"method"}],"path":"\/documentation\/gym\/ppo","title":"PPO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/runningmeanstd\/init(mean:variance:)","title":"init(mean: TensorElement, variance: TensorElement)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/gym\/runningmeanstd\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/gym\/runningmeanstd\/mean","title":"var mean: TensorElement","type":"property"},{"path":"\/documentation\/gym\/runningmeanstd\/variance","title":"var variance: TensorElement","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/runningmeanstd\/norm(_:)","title":"func norm(TensorElement) -> TensorElement","type":"method"},{"path":"\/documentation\/gym\/runningmeanstd\/update(_:)","title":"func update([TensorElement])","type":"method"}],"path":"\/documentation\/gym\/runningmeanstd","title":"RunningMeanStd","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/gym\/sfmt\/init(seed:)","title":"init(seed: UInt64)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/sfmt\/next()-7i519","title":"func next() -> UInt64","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/gym\/sfmt\/next()-1kc1o","title":"func next<T>() -> T","type":"method"},{"path":"\/documentation\/gym\/sfmt\/next()-7gsvi","title":"func next() -> UInt64","type":"method"},{"path":"\/documentation\/gym\/sfmt\/next(upperbound:)","title":"func next<T>(upperBound: T) -> T","type":"method"}],"path":"\/documentation\/gym\/sfmt\/randomnumbergenerator-implementations","title":"RandomNumberGenerator Implementations","type":"symbol"}],"path":"\/documentation\/gym\/sfmt","title":"SFMT","type":"struct"}],"path":"\/documentation\/gym","title":"Gym","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/add\/init(leftscalar:rightscalar:name:)","title":"init(leftScalar: Float, rightScalar: Float, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/add\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/add","title":"Add","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/anymodelbuilder\/bias","title":"var bias: Model.Parameters","type":"property"},{"path":"\/documentation\/nnc\/anymodelbuilder\/maxconcurrency","title":"var maxConcurrency: StreamContext.Concurrency","type":"property"},{"path":"\/documentation\/nnc\/anymodelbuilder\/memoryreduction","title":"var memoryReduction: Bool","type":"property"},{"path":"\/documentation\/nnc\/anymodelbuilder\/parameters","title":"var parameters: Model.Parameters","type":"property"},{"path":"\/documentation\/nnc\/anymodelbuilder\/runtimememorysize","title":"var runtimeMemorySize: UInt64","type":"property"},{"path":"\/documentation\/nnc\/anymodelbuilder\/testing","title":"var testing: Bool","type":"property"},{"path":"\/documentation\/nnc\/anymodelbuilder\/weight","title":"var weight: Model.Parameters","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/anymodelbuilder\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/nnc\/anymodelbuilder\/parameters(for:)","title":"func parameters(for: Model.ParametersType) -> Model.Parameters","type":"method"}],"path":"\/documentation\/nnc\/anymodelbuilder","title":"AnyModelBuilder","type":"class"},{"path":"\/documentation\/nnc\/anytensorstorage","title":"AnyTensorStorage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/argmax\/init(axis:name:)","title":"init(axis: Int, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/argmax\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/argmax","title":"Argmax","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/argmin\/init(axis:name:)","title":"init(axis: Int, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/argmin\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/argmin","title":"Argmin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/averagepool\/init(filtersize:hint:name:)","title":"init(filterSize: [Int], hint: Hint, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/averagepool\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/averagepool","title":"AveragePool","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/batchnorm\/init(momentum:epsilon:trainable:name:)","title":"init(momentum: Float, epsilon: Float, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/batchnorm\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/batchnorm","title":"BatchNorm","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/chunk\/init(_:axis:name:)","title":"init(Int, axis: Int, name: String)","type":"init"}],"path":"\/documentation\/nnc\/chunk","title":"Chunk","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/cmdparamsfactory\/newparams()","title":"func newParams() -> ccv_nnc_cmd_param_t","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/cmdparamsfactory\/factory","title":"static let factory: CmdParamsFactory","type":"property"}],"path":"\/documentation\/nnc\/cmdparamsfactory","title":"CmdParamsFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/cmul\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/cmul\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/cmul","title":"Cmul","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/concat\/init(axis:name:)","title":"init(axis: Int, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/concat\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T..., streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/concat","title":"Concat","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/contiguous\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/contiguous\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/contiguous","title":"Contiguous","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/convolution\/init(groups:filters:filtersize:dilation:nobias:hint:format:trainable:name:)","title":"init(groups: Int, filters: Int, filterSize: [Int], dilation: [Int], noBias: Bool, hint: Hint, format: Convolution.Format?, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/convolution\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/convolution\/format\/ohwi","title":"case OHWI","type":"case"},{"path":"\/documentation\/nnc\/convolution\/format\/oihw","title":"case OIHW","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/convolution\/format\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/convolution\/format\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/convolution\/format","title":"Convolution.Format","type":"enum"}],"path":"\/documentation\/nnc\/convolution","title":"Convolution","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/convolutiontranspose\/init(groups:filters:filtersize:dilation:outputpadding:nobias:hint:format:trainable:name:)","title":"init(groups: Int, filters: Int, filterSize: [Int], dilation: [Int], outputPadding: Int, noBias: Bool, hint: Hint, format: Convolution.Format?, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/convolutiontranspose\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/convolutiontranspose","title":"ConvolutionTranspose","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/copy\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/copy\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/copy","title":"Copy","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/custommodel\/init(inputs:outputs:hint:trainable:name:shapeinference:execute:)","title":"init(inputs: [CustomModel.IOType], outputs: [CustomModel.IOType], hint: Hint, trainable: Bool?, name: String, shapeInference: (ccv_nnc_cmd_t, UnsafePointer<ccv_nnc_tensor_param_t>?, Int32, ccv_nnc_hint_t, UnsafeMutablePointer<ccv_nnc_tensor_param_t>?, Int32) -> Void, execute: (ccv_nnc_cmd_t, ccv_nnc_hint_t, Int32, UnsafePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?, Int32, UnsafePointer<UnsafeMutablePointer<ccv_nnc_tensor_t>?>?, Int32, OpaquePointer?) -> Int32)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/custommodel\/iotype\/inputoroutput","title":"case inputOrOutput","type":"case"},{"path":"\/documentation\/nnc\/custommodel\/iotype\/notensor","title":"case noTensor","type":"case"},{"path":"\/documentation\/nnc\/custommodel\/iotype\/sharedtensor(_:)","title":"case sharedTensor(ccv_cnnp_cmd_exec_io_init_state_t)","type":"case"},{"path":"\/documentation\/nnc\/custommodel\/iotype\/sharedtensorastrainable(_:)","title":"case sharedTensorAsTrainable(ccv_cnnp_cmd_exec_io_init_state_t)","type":"case"},{"path":"\/documentation\/nnc\/custommodel\/iotype\/tensornotoutput","title":"case tensorNotOutput","type":"case"}],"path":"\/documentation\/nnc\/custommodel\/iotype","title":"CustomModel.IOType","type":"enum"}],"path":"\/documentation\/nnc\/custommodel","title":"CustomModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/datatypeconversion\/init(_:sameaslast:name:)","title":"init(DataType?, sameAsLast: Bool, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/datatypeconversion\/callasfunction(_:of:sameas:streamcontext:)","title":"func callAsFunction<T, U>(T, of: U.ElementNumeric.Type, sameAs: U.Type, streamContext: StreamContext?) -> U","type":"method"},{"path":"\/documentation\/nnc\/datatypeconversion\/callasfunction(_:sameas:streamcontext:)","title":"func callAsFunction<T, U>(T, sameAs: U, streamContext: StreamContext?) -> U","type":"method"}],"path":"\/documentation\/nnc\/datatypeconversion","title":"DatatypeConversion","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/debug\/init(name:_:)","title":"init(name: String, ([(any AnyTensor)?], StreamContext?) -> Void)","type":"init"}],"path":"\/documentation\/nnc\/debug","title":"Debug","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dense\/init(count:nobias:flags:trainable:name:)","title":"init(count: Int, noBias: Bool, flags: Functional.GEMMFlag, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dense\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/dense","title":"Dense","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/div\/init(reciprocal:name:)","title":"init(reciprocal: Bool, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/div\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/div","title":"Div","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dropout\/init(probability:entirety:name:)","title":"init(probability: Float, entirety: Bool, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dropout\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/dropout","title":"Dropout","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/init(_:)","title":"init(DynamicGraph.AnyTensor.AnyTensor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/format","title":"var format: TensorFormat","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/grad","title":"var grad: DynamicGraph.AnyTensor.AnyTensor?","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/graph","title":"var graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/isconstant","title":"var isConstant: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/iscontiguous","title":"var isContiguous: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/kind","title":"var kind: DeviceKind","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/requiresgrad","title":"var requiresGrad: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/shape","title":"var shape: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/strides","title":"var strides: TensorShape","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/as(of:)","title":"func `as`<Element>(of: Element.Type) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/backward(to:streamcontext:)-4c2n3","title":"func backward(to: DynamicGraph.AnyTensor, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/backward(to:streamcontext:)-4lb6g","title":"func backward<S>(to: S, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/permuted(_:)","title":"func permuted(Int...) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/reshaped(format:shape:offset:strides:)","title":"func reshaped(format: TensorFormat, shape: TensorShape, offset: TensorShape?, strides: TensorShape?) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/untyped","title":"var untyped: [DynamicGraph.AnyTensor]","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/dynamicgraph_any-implementations","title":"DynamicGraph_Any Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/anytensor","title":"DynamicGraph.AnyTensor.AnyTensor","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/evaluate(model:testing:dataparallel:inputs:outputsize:streamcontext:)","title":"static func evaluate(model: OpaquePointer, testing: Bool, dataParallel: inout Int?, inputs: [(any DynamicGraph_Any)?], outputSize: Int32, streamContext: StreamContext?) -> [DynamicGraph.AnyTensor.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/exec(cmd:hint:inputs:outputsize:streamcontext:)","title":"static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [(any DynamicGraph_Any)?], outputSize: Int32, streamContext: StreamContext?) -> [DynamicGraph.AnyTensor.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/exec(cmd:hint:inputs:outputs:streamcontext:)","title":"static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [(any DynamicGraph_Any)?], outputs: [any DynamicGraph_Any], streamContext: StreamContext?)","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/anytensor\/dynamicgraph_anytensorgroup-implementations","title":"DynamicGraph_AnyTensorGroup Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/anytensor","title":"DynamicGraph.AnyTensor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/init(from:streamcontext:)","title":"convenience init(from: DynamicGraph.AnyTensor, streamContext: StreamContext?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/rawvalue","title":"var rawValue: Tensor<Element>","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/typeerased","title":"var typeErased: DynamicGraph.Tensor<Element>.AnyTensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/partitioned(kth:axis:descending:streamcontext:)","title":"func partitioned(kth: Int, axis: Int, descending: Bool, streamContext: StreamContext?) -> (DynamicGraph.Tensor<Element>, indices: DynamicGraph.Tensor<Int32>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/sorted(axis:descending:streamcontext:)","title":"func sorted(axis: Int, descending: Bool, streamContext: StreamContext?) -> (DynamicGraph.Tensor<Element>, indices: DynamicGraph.Tensor<Int32>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/uniqueconsecutive(count:streamcontext:)","title":"func uniqueConsecutive(count: Int, streamContext: StreamContext?) -> (DynamicGraph.Tensor<Element>, counts: DynamicGraph.Tensor<Int32>)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:)","title":"subscript(Int...) -> Element","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/relu()","title":"func ReLU()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/relu(streamcontext:)","title":"func ReLU(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Self]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/chunked(_:axis:streamcontext:)","title":"func chunked(Int, axis: Int, streamContext: StreamContext?) -> [DynamicGraph.Tensor<Element>]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamp(_:)-5vids","title":"func clamp(PartialRangeFrom<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamp(_:)-8m7u7","title":"func clamp(PartialRangeThrough<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamp(_:)-8s01y","title":"func clamp(ClosedRange<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamp(_:streamcontext:)-3pcdl","title":"func clamp(PartialRangeFrom<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamp(_:streamcontext:)-5hwzj","title":"func clamp(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamp(_:streamcontext:)-5uxot","title":"func clamp(PartialRangeThrough<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamped(_:)-2s46s","title":"func clamped(ClosedRange<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamped(_:)-8kcdg","title":"func clamped(PartialRangeThrough<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamped(_:)-96rao","title":"func clamped(PartialRangeFrom<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamped(_:streamcontext:)-3260n","title":"func clamped(ClosedRange<Float>, streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamped(_:streamcontext:)-7ruv0","title":"func clamped(PartialRangeThrough<Float>, streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/clamped(_:streamcontext:)-8uih6","title":"func clamped(PartialRangeFrom<Float>, streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/contiguous()","title":"func contiguous() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/contiguous(streamcontext:)","title":"func contiguous(streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/copied()","title":"func copied() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/copied(streamcontext:)","title":"func copied(streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/detach()","title":"func detach()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/full(_:)","title":"func full(Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/full(_:streamcontext:)","title":"func full(Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/lerp(_:to:)","title":"func lerp(Float, to: Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/lerp(_:to:streamcontext:)","title":"func lerp(Float, to: DynamicGraph.Tensor<Element>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/rand(_:)","title":"func rand(ClosedRange<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/rand(_:streamcontext:)","title":"func rand(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/randn(std:mean:)","title":"func randn(std: Float, mean: Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/randn(std:mean:streamcontext:)","title":"func randn(std: Float, mean: Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/reduced(_:axis:streamcontext:)","title":"func reduced(ReduceOp, axis: [Int], streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/scale(by:)","title":"func scale(by: Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/scale(by:streamcontext:)","title":"func scale(by: Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/scaled(by:)","title":"func scaled(by: Float) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/scaled(by:streamcontext:)","title":"func scaled(by: Float, streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/sigmoid()","title":"func sigmoid()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/sigmoid(streamcontext:)","title":"func sigmoid(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/softmax()","title":"func softmax()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/softmax(streamcontext:)","title":"func softmax(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/swish()","title":"func swish()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/swish(streamcontext:)","title":"func swish(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/tanh()","title":"func tanh()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/tanh(streamcontext:)","title":"func tanh(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/tocpu()","title":"func toCPU() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/tocpu(streamcontext:)","title":"func toCPU(streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/togpu(_:)","title":"func toGPU(Int) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/togpu(_:streamcontext:)","title":"func toGPU(Int, streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/transposed(_:_:)","title":"func transposed(Int, Int) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/transposed(_:_:streamcontext:)","title":"func transposed(Int, Int, streamContext: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:)-2vakl","title":"subscript(Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:)-7dqrb","title":"subscript(Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:)-2o0yg","title":"subscript(Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:)-73gtp","title":"subscript(Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:)-348au","title":"subscript(Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:)-6pq2h","title":"subscript(Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:)-8bb2k","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:)-968yo","title":"subscript(Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:)-1do9u","title":"subscript(Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:)-4rlp6","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:)-11iiu","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:)-85si4","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:_:)-34vtq","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:_:)-4c0b5","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:_:streamcontext:)-3dmee","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:_:streamcontext:)-97isg","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:streamcontext:)-3aty1","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:_:streamcontext:)-4h3iq","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:streamcontext:)-54ers","title":"subscript(Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:_:streamcontext:)-68vey","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:streamcontext:)-1fddm","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:_:streamcontext:)-5yewd","title":"subscript(Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:streamcontext:)-1jk9l","title":"subscript(Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:_:streamcontext:)-1t4gt","title":"subscript(Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:streamcontext:)-2sfao","title":"subscript(Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:_:streamcontext:)-6t4fo","title":"subscript(Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:streamcontext:)-4lfce","title":"subscript(Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:_:streamcontext:)-9smbo","title":"subscript(Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:streamcontext:)-6mppt","title":"subscript((UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:streamcontext:)-8r9ky","title":"subscript(Range<Int>..., streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:streamcontext:)-9ckmr","title":"subscript([Range<Int>], streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/subscript(_:streamcontext:)-frw8","title":"subscript(Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Tensor<Element>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/elementnumeric","title":"DynamicGraph.Tensor.ElementNumeric","type":"typealias"}],"path":"\/documentation\/nnc\/dynamicgraph\/tensor\/dynamicgraph_tensorgroup-implementations","title":"DynamicGraph_TensorGroup Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/tensor","title":"DynamicGraph.Tensor","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/init(rawvalue:)","title":"init(rawValue: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/rawvalue","title":"let rawValue: UInt64","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/allcases","title":"static let allCases: [DynamicGraph.EnableBits]","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemfa","title":"static let disableMFA: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemfaattention","title":"static let disableMFAAttention: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemfagemm","title":"static let disableMFAGEMM: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemfaneuralaccelerators","title":"static let disableMFANeuralAccelerators: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemixedmpsgemm","title":"static let disableMixedMPSGEMM: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemixedmpssoftmax","title":"static let disableMixedMPSSoftMax: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/disablemmapmtlbuffer","title":"static let disableMmapMTLBuffer: DynamicGraph.EnableBits","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/enablebits\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/enablebits","title":"DynamicGraph.EnableBits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/init(_:)-4oijq","title":"init<OtherElement>(DynamicGraph.Group<OtherElement>)","type":"init"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/init(_:)-4tffp","title":"init([Element])","type":"init"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/init(_:)-9wli0","title":"init(Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/endindex","title":"var endIndex: DynamicGraph.Group<Element>.Index","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/indices-swift.property","title":"var indices: DynamicGraph.Group<Element>.Indices","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/startindex","title":"var startIndex: DynamicGraph.Group<Element>.Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/as(of:)","title":"func `as`<T>(of: T.Type) -> DynamicGraph.Group<DynamicGraph.Tensor<T>>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/backward(to:streamcontext:)-8chbs","title":"func backward<Group>(to: Group, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/backward(to:streamcontext:)-9gxg1","title":"func backward<S>(to: S, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/formindex(after:)","title":"func formIndex(after: inout DynamicGraph.Group<Element>.Index)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/formindex(before:)","title":"func formIndex(before: inout DynamicGraph.Group<Element>.Index)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/partitioned(kth:axis:descending:streamcontext:)","title":"func partitioned(kth: Int, axis: Int, descending: Bool, streamContext: StreamContext?) -> (DynamicGraph.Group<Element>, indices: DynamicGraph.Group<DynamicGraph.Tensor<Int32>>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reshaped(format:shape:offset:strides:)","title":"func reshaped(format: TensorFormat, shape: TensorShape, offset: TensorShape?, strides: TensorShape?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/sorted(axis:descending:streamcontext:)","title":"func sorted(axis: Int, descending: Bool, streamContext: StreamContext?) -> (DynamicGraph.Group<Element>, indices: DynamicGraph.Group<DynamicGraph.Tensor<Int32>>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/uniqueconsecutive(count:streamcontext:)","title":"func uniqueConsecutive(count: Int, streamContext: StreamContext?) -> (DynamicGraph.Group<Element>, counts: DynamicGraph.Group<DynamicGraph.Tensor<Int32>>)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-2kltf","title":"subscript(DynamicGraph.Group<Element>.Index) -> Element","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-9rk7","title":"subscript(DynamicGraph.Group<Element>.Indices) -> DynamicGraph.Group<Element>.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/element","title":"DynamicGraph.Group.Element","type":"typealias"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/index","title":"DynamicGraph.Group.Index","type":"typealias"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/indices-swift.typealias","title":"DynamicGraph.Group.Indices","type":"typealias"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subsequence","title":"DynamicGraph.Group.SubSequence","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/firstrange(of:)-eklz","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/flatmapoffsets(_:)","title":"func flatmapOffsets(Offsets?) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/mapoffsets(_:)","title":"func mapOffsets(Offsets) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/backward(to:streamcontext:)-3k7r1","title":"func backward(to: DynamicGraph.AnyTensor, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/contains(_:)-9n8wv","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/convertbyoffset(_:in:)-3vpcs","title":"func convertByOffset<C>(Range<Self.Index>, in: C) -> Range<C.Index>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/convertbyoffset(_:in:)-9cx3","title":"func convertByOffset<C>(Self.Index, in: C) -> C.Index","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/firstrange(of:)-62eqj","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/index(atoffset:)","title":"func index(atOffset: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/map(_:)-8osb2","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/offset(of:)","title":"func offset(of: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/offset(ofindex:)","title":"func offset(ofIndex: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/offsets(of:)","title":"func offsets(of: Range<Self.Index>) -> Range<Int>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/split(around:)","title":"func split(around: Range<Self.Index>) -> (prefix: Self.SubSequence, Self.SubSequence, suffix: Self.SubSequence)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/split(separator:maxsplits:omittingemptysubsequences:)-1o74z","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/split(separator:maxsplits:omittingemptysubsequences:)-849vx","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/trydropprefix(_:)","title":"func tryDropPrefix<C>(C) -> Self.SubSequence?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/trydropsuffix(_:)","title":"func tryDropSuffix<C>(C) -> Self.SubSequence?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-8qw4x","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-rmym","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/format","title":"var format: TensorFormat","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/graph","title":"var graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/isconstant","title":"var isConstant: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/iscontiguous","title":"var isContiguous: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/kind","title":"var kind: DeviceKind","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/requiresgrad","title":"var requiresGrad: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/shape","title":"var shape: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/strides","title":"var strides: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/untyped","title":"var untyped: [DynamicGraph.AnyTensor]","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/dynamicgraph_any-implementations","title":"DynamicGraph_Any Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/anytensor","title":"DynamicGraph.Group.AnyTensor","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/evaluate(model:testing:dataparallel:inputs:outputsize:streamcontext:)","title":"static func evaluate(model: OpaquePointer, testing: Bool, dataParallel: inout Int?, inputs: [(any DynamicGraph_Any)?], outputSize: Int32, streamContext: StreamContext?) -> [DynamicGraph.Group<Element>.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/exec(cmd:hint:inputs:outputsize:streamcontext:)","title":"static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [(any DynamicGraph_Any)?], outputSize: Int32, streamContext: StreamContext?) -> [DynamicGraph.Group<Element>.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/exec(cmd:hint:inputs:outputs:streamcontext:)","title":"static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [(any DynamicGraph_Any)?], outputs: [any DynamicGraph_Any], streamContext: StreamContext?)","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/dynamicgraph_anytensorgroup-implementations","title":"DynamicGraph_AnyTensorGroup Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/grad","title":"var grad: DynamicGraph.Group<DynamicGraph.AnyTensor>?","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/typeerased","title":"var typeErased: DynamicGraph.Group<DynamicGraph.AnyTensor>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/relu()","title":"func ReLU()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/relu(streamcontext:)","title":"func ReLU(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Self]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/chunked(_:axis:streamcontext:)","title":"func chunked(Int, axis: Int, streamContext: StreamContext?) -> [DynamicGraph.Group<Element>]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamp(_:)-6175m","title":"func clamp(ClosedRange<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamp(_:)-93cqf","title":"func clamp(PartialRangeThrough<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamp(_:)-det4","title":"func clamp(PartialRangeFrom<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamp(_:streamcontext:)-4oijz","title":"func clamp(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamp(_:streamcontext:)-62yh1","title":"func clamp(PartialRangeFrom<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamp(_:streamcontext:)-69xis","title":"func clamp(PartialRangeThrough<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamped(_:)-6o2t6","title":"func clamped(PartialRangeFrom<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamped(_:)-9y55b","title":"func clamped(PartialRangeThrough<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamped(_:)-xmpz","title":"func clamped(ClosedRange<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamped(_:streamcontext:)-414if","title":"func clamped(ClosedRange<Float>, streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamped(_:streamcontext:)-4ldyp","title":"func clamped(PartialRangeThrough<Float>, streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/clamped(_:streamcontext:)-7rewx","title":"func clamped(PartialRangeFrom<Float>, streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/contiguous()","title":"func contiguous() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/contiguous(streamcontext:)","title":"func contiguous(streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/copied()","title":"func copied() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/copied(streamcontext:)","title":"func copied(streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/detach()","title":"func detach()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/full(_:)","title":"func full(Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/full(_:streamcontext:)","title":"func full(Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lerp(_:to:)","title":"func lerp(Float, to: Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lerp(_:to:streamcontext:)","title":"func lerp(Float, to: DynamicGraph.Group<Element>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/rand(_:)","title":"func rand(ClosedRange<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/rand(_:streamcontext:)","title":"func rand(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/randn(std:mean:)","title":"func randn(std: Float, mean: Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/randn(std:mean:streamcontext:)","title":"func randn(std: Float, mean: Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reduced(_:axis:streamcontext:)","title":"func reduced(ReduceOp, axis: [Int], streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/scale(by:)","title":"func scale(by: Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/scale(by:streamcontext:)","title":"func scale(by: Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/scaled(by:)","title":"func scaled(by: Float) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/scaled(by:streamcontext:)","title":"func scaled(by: Float, streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/sigmoid()","title":"func sigmoid()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/sigmoid(streamcontext:)","title":"func sigmoid(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/softmax()","title":"func softmax()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/softmax(streamcontext:)","title":"func softmax(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/swish()","title":"func swish()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/swish(streamcontext:)","title":"func swish(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/tanh()","title":"func tanh()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/tanh(streamcontext:)","title":"func tanh(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/tocpu()","title":"func toCPU() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/tocpu(streamcontext:)","title":"func toCPU(streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/togpu(_:)","title":"func toGPU(Int) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/togpu(_:streamcontext:)","title":"func toGPU(Int, streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/transposed(_:_:)","title":"func transposed(Int, Int) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/transposed(_:_:streamcontext:)","title":"func transposed(Int, Int, streamContext: StreamContext?) -> DynamicGraph.Group<Element>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-2k6e2","title":"subscript(Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-2q64e","title":"subscript(Range<Int>...) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-9mvo7","title":"subscript((UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:)-9xz3y","title":"subscript([Range<Int>]) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:)-5s1tt","title":"subscript(Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:)-vv2x","title":"subscript(Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:)-2ulx2","title":"subscript(Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:)-hl6s","title":"subscript(Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:)-765bs","title":"subscript(Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:)-81jcc","title":"subscript(Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:)-4sore","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:)-4sq8q","title":"subscript(Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:)-1xbwi","title":"subscript(Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:)-3klsu","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:)-3aij5","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:)-9jr0b","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:_:)-3l5h3","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:_:)-5hdau","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:_:streamcontext:)-1k4de","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:_:streamcontext:)-2ewno","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:streamcontext:)-16afb","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:_:streamcontext:)-19mwo","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:streamcontext:)-4fz1f","title":"subscript(Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:_:streamcontext:)-7ewlt","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:streamcontext:)-22t3l","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:_:streamcontext:)-7cizb","title":"subscript(Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:streamcontext:)-4jett","title":"subscript(Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:_:streamcontext:)-4z4ok","title":"subscript(Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:streamcontext:)-3kl67","title":"subscript(Int, Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:_:streamcontext:)-4r1y","title":"subscript(Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:streamcontext:)-5emv1","title":"subscript(Int, Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:_:streamcontext:)-7wg0z","title":"subscript(Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:streamcontext:)-3ew32","title":"subscript([Range<Int>], streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:streamcontext:)-3q1hv","title":"subscript(Range<Int>, streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:streamcontext:)-6i77n","title":"subscript(Range<Int>..., streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/subscript(_:streamcontext:)-9m1c3","title":"subscript((UnboundedRange_) -> (), streamContext _: StreamContext?) -> DynamicGraph.Group<Element>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/elementnumeric","title":"DynamicGraph.Group.ElementNumeric","type":"typealias"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/dynamicgraph_tensorgroup-implementations","title":"DynamicGraph_TensorGroup Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/all(_:)","title":"func all((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/any(_:)","title":"func any((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/contains(_:)-xbu7","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/flatmap(_:)-3fm4o","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/flatmap(_:)-8zdbc","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/joined(separator:)-6ehh9","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/joined(separator:)-9s57k","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/map(_:)-4mft9","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/none(_:)","title":"func none((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/split(separator:maxsplits:omittingemptysubsequences:)-8ujoo","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/group\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/group\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/group","title":"DynamicGraph.Group","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/statistics-swift.struct\/computations","title":"var computations: Int","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/statistics-swift.struct\/variables","title":"var variables: Int","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/statistics-swift.struct","title":"DynamicGraph.Statistics","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/externaldata","title":"static let externalData: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/externalondemand","title":"static let externalOnDemand: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/ezm7","title":"static let ezm7: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/fpzip","title":"static let fpzip: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/jit","title":"static let jit: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/q4p","title":"static let q4p: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/q5p","title":"static let q5p: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/q6p","title":"static let q6p: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/q7p","title":"static let q7p: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/q8p","title":"static let q8p: DynamicGraph.Store.Codec","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/zip","title":"static let zip: DynamicGraph.Store.Codec","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/externaldata(_:)","title":"static func externalData(DynamicGraph.Store.Codec.DataReadingOptions) -> DynamicGraph.Store.Codec","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/datareadingoptions\/fread","title":"case fread","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/datareadingoptions\/mmap","title":"case mmap","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/datareadingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/datareadingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/datareadingoptions","title":"DynamicGraph.Store.Codec.DataReadingOptions","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec","title":"DynamicGraph.Store.Codec","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/readonly","title":"static let readOnly: DynamicGraph.Store.OpenFlag","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/truncatewhenclose","title":"static let truncateWhenClose: DynamicGraph.Store.OpenFlag","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/openflag","title":"DynamicGraph.Store.OpenFlag","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/keys","title":"var keys: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/codec(for:)","title":"func codec(for: String) -> DynamicGraph.Store.Codec?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:kind:codec:)","title":"func read(String, kind: DeviceKind?, codec: DynamicGraph.Store.Codec) -> (any AnyTensor)?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:model:codec:reader:)-1yn2d","title":"func read(String, model: AnyModelBuilder, codec: DynamicGraph.Store.Codec, reader: ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:model:codec:reader:)-39p9f","title":"func read(String, model: any AnyModel, codec: DynamicGraph.Store.Codec, reader: ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:model:codec:reader:)-3hrc8","title":"func read(String, model: Model, codec: DynamicGraph.Store.Codec, reader: ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:model:strict:codec:reader:)-39ax1","title":"func read(String, model: AnyModelBuilder, strict: Bool, codec: DynamicGraph.Store.Codec, reader: ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:model:strict:codec:reader:)-3w5ri","title":"func read(String, model: Model, strict: Bool, codec: DynamicGraph.Store.Codec, reader: ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:model:strict:codec:reader:)-7ugzt","title":"func read(String, model: any AnyModel, strict: Bool, codec: DynamicGraph.Store.Codec, reader: ((String, DataType, TensorFormat, TensorShape) -> DynamicGraph.Store.ModelReaderResult)?) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(_:variable:kind:codec:)","title":"func read(String, variable: any DynamicGraph_Any, kind: DeviceKind?, codec: DynamicGraph.Store.Codec) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/read(like:)","title":"func read(like: String) -> DynamicGraph.AnyTensor?","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/remove(_:)","title":"func remove(String)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/vacuum()","title":"func vacuum()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/withtransaction(_:)","title":"func withTransaction<Result>(() throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:model:codec:writer:)-25ehd","title":"func write(String, model: Model, codec: DynamicGraph.Store.Codec, writer: ((String, any AnyTensor) -> DynamicGraph.Store.ModelWriterResult)?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:model:codec:writer:)-54i4n","title":"func write(String, model: AnyModelBuilder, codec: DynamicGraph.Store.Codec, writer: ((String, any AnyTensor) -> DynamicGraph.Store.ModelWriterResult)?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:model:codec:writer:)-6f18n","title":"func write(String, model: any AnyModel, codec: DynamicGraph.Store.Codec, writer: ((String, any AnyTensor) -> DynamicGraph.Store.ModelWriterResult)?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:model:strict:codec:writer:)-3rzo9","title":"func write(String, model: Model, strict: Bool, codec: DynamicGraph.Store.Codec, writer: ((String, any AnyTensor) -> DynamicGraph.Store.ModelWriterResult)?) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:model:strict:codec:writer:)-7n0nf","title":"func write(String, model: AnyModelBuilder, strict: Bool, codec: DynamicGraph.Store.Codec, writer: ((String, any AnyTensor) -> DynamicGraph.Store.ModelWriterResult)?) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:model:strict:codec:writer:)-9yypg","title":"func write(String, model: any AnyModel, strict: Bool, codec: DynamicGraph.Store.Codec, writer: ((String, any AnyTensor) -> DynamicGraph.Store.ModelWriterResult)?) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:tensor:codec:)","title":"func write(String, tensor: any AnyTensor, codec: DynamicGraph.Store.Codec)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:tensor:strict:codec:)","title":"func write(String, tensor: any AnyTensor, strict: Bool, codec: DynamicGraph.Store.Codec) throws","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:variable:codec:)","title":"func write(String, variable: any DynamicGraph_Any, codec: DynamicGraph.Store.Codec)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/write(_:variable:strict:codec:)","title":"func write(String, variable: any DynamicGraph_Any, strict: Bool, codec: DynamicGraph.Store.Codec) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderror\/missing(_:)","title":"case missing(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderror","title":"DynamicGraph.Store.ModelReadError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderresult\/continue(_:codec:store:)","title":"case `continue`(String, codec: DynamicGraph.Store.Codec?, store: DynamicGraph.Store?)","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderresult\/fail","title":"case fail","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderresult\/final(_:)","title":"case final(any AnyTensor)","type":"case"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelreaderresult","title":"DynamicGraph.Store.ModelReaderResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror\/externalfilewriteerror","title":"case externalFileWriteError","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror\/sqliteerror","title":"case sqliteError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriteerror","title":"DynamicGraph.Store.ModelWriteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriterresult\/continue(_:)","title":"case `continue`(String)","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriterresult\/skip","title":"case skip","type":"case"}],"path":"\/documentation\/nnc\/dynamicgraph\/store\/modelwriterresult","title":"DynamicGraph.Store.ModelWriterResult","type":"enum"}],"path":"\/documentation\/nnc\/dynamicgraph\/store","title":"DynamicGraph.Store","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/cgraph","title":"let cGraph: OpaquePointer","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/maxconcurrency","title":"var maxConcurrency: StreamContext.Concurrency","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/statistics-swift.property","title":"var statistics: DynamicGraph.Statistics","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/workspacesize","title":"var workspaceSize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/constant()","title":"func constant() -> DynamicGraph.AnyTensor","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/constant(_:)-7apv2","title":"func constant<Element>([Tensor<Element>]) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/constant(_:)-7r3of","title":"func constant<Element>(Tensor<Element>) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/constant(_:_:of:)","title":"func constant<Element>(DeviceKind, TensorShapeFormat, of: Element.Type) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/constant(_:format:shape:of:)","title":"func constant<Element>(DeviceKind, format: TensorFormat, shape: TensorShape, of: Element.Type) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/constant(like:)","title":"func constant<T>(like: T) -> T","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/garbagecollect()","title":"func garbageCollect()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/joined()","title":"func joined()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/openstore(_:flags:externalstore:chunksize:procedure:)","title":"func openStore<SuccessResult>(String, flags: DynamicGraph.Store.OpenFlag, externalStore: String?, chunkSize: Int, procedure: (DynamicGraph.Store) throws -> SuccessResult) rethrows -> Result<SuccessResult, DynamicGraph.OpenError>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/variable()","title":"func variable() -> DynamicGraph.AnyTensor","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/variable(_:)-4fnxj","title":"func variable<Element>([Tensor<Element>]) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/variable(_:)-9ntqr","title":"func variable<Element>(Tensor<Element>) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/variable(_:_:of:)","title":"func variable<Element>(DeviceKind, TensorShapeFormat, of: Element.Type) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/variable(_:format:shape:of:)","title":"func variable<Element>(DeviceKind, format: TensorFormat, shape: TensorShape, of: Element.Type) -> DynamicGraph.Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/variable(like:)","title":"func variable<T>(like: T) -> T","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/withnograd(_:)","title":"func withNoGrad<Result>(() throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/withstream(_:_:)","title":"func withStream<Result>(StreamContext, () throws -> Result) rethrows -> Result","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/anygroup","title":"DynamicGraph.AnyGroup","type":"typealias"},{"path":"\/documentation\/nnc\/dynamicgraph\/anytensorgroup","title":"DynamicGraph.AnyTensorGroup","type":"typealias"},{"path":"\/documentation\/nnc\/dynamicgraph\/tensorgroup","title":"DynamicGraph.TensorGroup","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/flags","title":"static var flags: DynamicGraph.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.type.property","title":"static var logLevel: DynamicGraph.LogLevel","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph\/queuewatermark","title":"static var queueWatermark: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/setprofiler(_:)","title":"static func setProfiler(Bool)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph\/setseed(_:)","title":"static func setSeed(UInt32)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum\/error","title":"case error","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum\/info","title":"case info","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum\/verbose","title":"case verbose","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/loglevel-swift.enum","title":"DynamicGraph.LogLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/openerror\/cannotopen","title":"case cannotOpen","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/openerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/dynamicgraph\/openerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph\/openerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph\/openerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dynamicgraph\/openerror","title":"DynamicGraph.OpenError","type":"enum"}],"path":"\/documentation\/nnc\/dynamicgraph","title":"DynamicGraph","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/embedding\/init(_:vocabularysize:embeddingsize:trainable:name:)","title":"init<T>(T.Type, vocabularySize: Int, embeddingSize: Int, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/embedding\/callasfunction(_:streamcontext:)-79j06","title":"func callAsFunction<T, U>(U, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/embedding\/callasfunction(_:streamcontext:)-9kkmc","title":"func callAsFunction<T, U>(U, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/embedding","title":"Embedding","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/extract\/init(_:name:)","title":"init(Int, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/extract\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/extract","title":"Extract","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/flatten\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/flatten\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/flatten","title":"Flatten","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/gelu\/init(approximate:name:)","title":"init(approximate: GELU.Approximate, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/gelu\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/gelu\/approximate\/none","title":"case none","type":"case"},{"path":"\/documentation\/nnc\/gelu\/approximate\/tanh","title":"case tanh","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/gelu\/approximate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/gelu\/approximate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/gelu\/approximate","title":"GELU.Approximate","type":"enum"}],"path":"\/documentation\/nnc\/gelu","title":"GELU","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/groupnorm\/init(axis:groups:epsilon:reduce:elementwiseaffine:trainable:name:)","title":"init(axis: Int, groups: Int, epsilon: Float, reduce: [Int], elementwiseAffine: Bool, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/groupnorm\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/groupnorm","title":"GroupNorm","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/identity\/init(name:)","title":"init(name: String)","type":"init"}],"path":"\/documentation\/nnc\/identity","title":"Identity","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/indexselect\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/indexselect\/callasfunction(_:index:streamcontext:)-2f8ww","title":"func callAsFunction<T, U>(T, index: U, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/indexselect\/callasfunction(_:index:streamcontext:)-9nsa9","title":"func callAsFunction<T, U>(T, index: U, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/indexselect","title":"IndexSelect","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/input\/init()","title":"init()","type":"init"}],"path":"\/documentation\/nnc\/input","title":"Input","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/lstm\/init(masked:hiddensize:numberoflayers:projectsize:bias:batchfirst:bidirectional:dropout:trainable:name:)","title":"init(masked: Bool, hiddenSize: Int, numberOfLayers: Int, projectSize: Int?, bias: Bool, batchFirst: Bool, bidirectional: Bool, dropout: Float?, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/lstm\/callasfunction(_:mask:streamcontext:)","title":"func callAsFunction<T, U>(T, mask: U, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/lstm\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/lstm","title":"LSTM","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/layernorm\/init(epsilon:axis:elementwiseaffine:trainable:name:)","title":"init(epsilon: Float, axis: [Int], elementwiseAffine: Bool, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/layernorm\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/layernorm","title":"LayerNorm","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/leakyrelu\/init(negativeslope:name:)","title":"init(negativeSlope: Float, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/leakyrelu\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/leakyrelu","title":"LeakyReLU","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/maskedfill\/init(equalto:fillwith:name:)","title":"init(equalTo: Float, fillWith: Float, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/maskedfill\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T, U>(T, U, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/maskedfill","title":"MaskedFill","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/matmul\/init(transposea:transposeb:flags:name:)","title":"init(transposeA: (Int, Int), transposeB: (Int, Int), flags: Functional.GEMMFlag, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/matmul\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/matmul","title":"Matmul","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/max\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/max\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/max","title":"Max","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/maxpool\/init(filtersize:hint:name:)","title":"init(filterSize: [Int], hint: Hint, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/maxpool\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/maxpool","title":"MaxPool","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/min\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/min\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/min","title":"Min","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/io\/io","title":"var io: Model.IO","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/io\/add(dependencies:)","title":"func add(dependencies: [Model.IO])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/io\/gelu(approximate:)","title":"func GELU(approximate: GELU.Approximate) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/relu()","title":"func ReLU() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/argmax(axis:)","title":"func argmax(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/argmin(axis:)","title":"func argmin(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Model.IO]","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/clamped(_:)-67kkh","title":"func clamped(PartialRangeFrom<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/clamped(_:)-82xaz","title":"func clamped(ClosedRange<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/clamped(_:)-91tyx","title":"func clamped(PartialRangeThrough<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/contiguous()","title":"func contiguous() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/copied()","title":"func copied() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/debug(name:_:)","title":"func debug(name: String, ([(any AnyTensor)?], StreamContext?) -> Void) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/identity()","title":"func identity() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/leakyrelu(negativeslope:)","title":"func leakyReLU(negativeSlope: Float) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/moved(to:name:)","title":"func moved(to: any ModelIOConvertible, name: String) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/padded(_:begin:end:)","title":"func padded(Pad.Mode, begin: TensorShape, end: TensorShape) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/partitioned(kth:axis:descending:)","title":"func partitioned(kth: Int, axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/permuted(_:)","title":"func permuted(Int...) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/reciprocal()","title":"func reciprocal() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/reshaped(_:offset:strides:format:)","title":"func reshaped(TensorShape, offset: TensorShape?, strides: TensorShape?, format: TensorFormat?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/sigmoid()","title":"func sigmoid() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/softmax()","title":"func softmax() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/sorted(axis:descending:)","title":"func sorted(axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/squareroot()","title":"func squareRoot() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/swish()","title":"func swish() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/tanh()","title":"func tanh() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/to(_:)","title":"func to(DataType) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/to(of:)","title":"func to(of: any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/transposed(_:_:)","title":"func transposed(Int, Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/io\/uniqueconsecutive(count:)","title":"func uniqueConsecutive(count: Int) -> Model.IO","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/io\/subscript(_:)","title":"subscript(Int) -> Model.IO","type":"subscript"}],"path":"\/documentation\/nnc\/model\/io\/modelioconvertible-implementations","title":"ModelIOConvertible Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/model\/io","title":"Model.IO","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/size","title":"var size: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/attach(consuming:)","title":"func attach(consuming: inout [(key: String, value: any AnyTensor)])","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/attach(from:)","title":"func attach(from: [(key: String, value: any AnyTensor)])","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/clamp(_:streamcontext:)-37tle","title":"func clamp(PartialRangeFrom<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/clamp(_:streamcontext:)-8so0g","title":"func clamp(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/clamp(_:streamcontext:)-9b3na","title":"func clamp(PartialRangeThrough<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/clipgradnorm(maxnorm:normtype:streamcontext:)","title":"func clipGradNorm(maxNorm: Float, normType: Model.Parameters.NormType, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/copied(_:)","title":"func copied<Element>(Element.Type) -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/copy(from:)-51ulz","title":"func copy<Element>(from: DynamicGraph.Tensor<Element>)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/copy(from:)-6qc28","title":"func copy(from: any AnyTensor)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/copy(from:)-9jxvm","title":"func copy(from: Model.Parameters)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/copy(to:)-2p22z","title":"func copy<Element>(to: DynamicGraph.Tensor<Element>)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/copy(to:)-6lisp","title":"func copy(to: any AnyTensor)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/detach(_:)","title":"func detach(DeviceKind) -> [(key: String, value: any AnyTensor)]","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/filter(where:)","title":"func filter(where: (String) -> Bool) -> [Model.Parameters]","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/first(where:)","title":"func first(where: (String) -> Bool) -> Model.Parameters?","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/lerp(_:to:streamcontext:)","title":"func lerp(Float, to: Model.Parameters, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/share(from:renamer:)","title":"func share(from: Model.Parameters, renamer: ((String, String) -> Model.Parameters.ModelParametersShareResult)?)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/subscript(_:)","title":"subscript(Int) -> Model.Parameters","type":"subscript"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/modelparametersshareresult\/continue(_:)","title":"case `continue`(String)","type":"case"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/modelparametersshareresult\/fail","title":"case fail","type":"case"}],"path":"\/documentation\/nnc\/model\/parameters-swift.class\/modelparametersshareresult","title":"Model.Parameters.ModelParametersShareResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/norm2","title":"case norm2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/model\/parameters-swift.class\/normtype","title":"Model.Parameters.NormType","type":"enum"}],"path":"\/documentation\/nnc\/model\/parameters-swift.class","title":"Model.Parameters","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/allcases","title":"static let allCases: [Model.EnableBits]","type":"property"},{"path":"\/documentation\/nnc\/model\/enablebits\/disableopt","title":"static let disableOpt: Model.EnableBits","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/model\/enablebits\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nnc\/model\/enablebits\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nnc\/model\/enablebits\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/enablebits\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nnc\/model\/enablebits\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nnc\/model\/enablebits\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/model\/enablebits","title":"Model.EnableBits","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/init(_:_:trainable:name:)","title":"convenience init([Model.IO], [Model.IO], trainable: Bool?, name: String)","type":"init"},{"path":"\/documentation\/nnc\/model\/init(_:trainable:name:)","title":"convenience init([Model], trainable: Bool?, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/bias","title":"var bias: Model.Parameters","type":"property"},{"path":"\/documentation\/nnc\/model\/cmodel","title":"let cModel: OpaquePointer","type":"property"},{"path":"\/documentation\/nnc\/model\/flags","title":"var flags: Model.EnableBits","type":"property"},{"path":"\/documentation\/nnc\/model\/gradientcheckpointing","title":"var gradientCheckpointing: Bool?","type":"property"},{"path":"\/documentation\/nnc\/model\/maxconcurrency","title":"var maxConcurrency: StreamContext.Concurrency","type":"property"},{"path":"\/documentation\/nnc\/model\/memoryreduction","title":"var memoryReduction: Bool","type":"property"},{"path":"\/documentation\/nnc\/model\/parameters-swift.property","title":"var parameters: Model.Parameters","type":"property"},{"path":"\/documentation\/nnc\/model\/runtimememorysize","title":"var runtimeMemorySize: UInt64","type":"property"},{"path":"\/documentation\/nnc\/model\/testing","title":"var testing: Bool","type":"property"},{"path":"\/documentation\/nnc\/model\/trainable","title":"var trainable: Bool?","type":"property"},{"path":"\/documentation\/nnc\/model\/weight","title":"var weight: Model.Parameters","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/callasfunction(_:)-4nrlf","title":"func callAsFunction([any ModelIOConvertible]) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/callasfunction(_:)-9jxds","title":"func callAsFunction(any ModelIOConvertible...) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/model\/callasfunction(inputs:_:streamcontext:)-2ktj2","title":"func callAsFunction<T>(inputs: T, [any DynamicGraph_Any], streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/model\/callasfunction(inputs:_:streamcontext:)-4kd2k","title":"func callAsFunction<T>(inputs: T, any DynamicGraph_Any..., streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/model\/compile(inputs:iseager:)-9i8qg","title":"func compile(inputs: [any DynamicGraph_Any], isEager: Bool)","type":"method"},{"path":"\/documentation\/nnc\/model\/compile(inputs:iseager:)-9p0vk","title":"func compile(inputs: any DynamicGraph_Any..., isEager: Bool)","type":"method"},{"path":"\/documentation\/nnc\/model\/copied()","title":"func copied() -> Self","type":"method"},{"path":"\/documentation\/nnc\/model\/parameters(for:)","title":"func parameters(for: Model.ParametersType) -> Model.Parameters","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/parameterstype\/bias","title":"case bias","type":"case"},{"path":"\/documentation\/nnc\/model\/parameterstype\/index(_:)","title":"case index(Int)","type":"case"},{"path":"\/documentation\/nnc\/model\/parameterstype\/weight","title":"case weight","type":"case"}],"path":"\/documentation\/nnc\/model\/parameterstype","title":"Model.ParametersType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/model\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/nnc\/model\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/model","title":"Model","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/modelbuilder\/init(_:name:)-4pup0","title":"init((T, [any DynamicGraph_Any]) -> Model, name: String)","type":"init"},{"path":"\/documentation\/nnc\/modelbuilder\/init(_:name:)-55gex","title":"convenience init(([any DynamicGraph_Any]) -> Model, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/modelbuilder\/callasfunction(_:inputs:_:streamcontext:)-101bg","title":"func callAsFunction<U>(T, inputs: U, any DynamicGraph_Any..., streamContext: StreamContext?) -> [U.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/callasfunction(_:inputs:_:streamcontext:)-4i10p","title":"func callAsFunction<U>(T, inputs: U, [any DynamicGraph_Any], streamContext: StreamContext?) -> [U.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/callasfunction(inputs:_:streamcontext:)-4tnis","title":"func callAsFunction<U>(inputs: U, any DynamicGraph_Any..., streamContext: StreamContext?) -> [U.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/callasfunction(inputs:_:streamcontext:)-8pae9","title":"func callAsFunction<U>(inputs: U, [any DynamicGraph_Any], streamContext: StreamContext?) -> [U.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/compile(_:inputs:iseager:)-1lsvw","title":"func compile(T, inputs: [any DynamicGraph_Any], isEager: Bool)","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/compile(_:inputs:iseager:)-8ge5z","title":"func compile(T, inputs: any DynamicGraph_Any..., isEager: Bool)","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/compile(inputs:iseager:)-4kat6","title":"func compile(inputs: any DynamicGraph_Any..., isEager: Bool)","type":"method"},{"path":"\/documentation\/nnc\/modelbuilder\/compile(inputs:iseager:)-4yweq","title":"func compile(inputs: [any DynamicGraph_Any], isEager: Bool)","type":"method"}],"path":"\/documentation\/nnc\/modelbuilder","title":"ModelBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/mul\/init(scalar:name:)","title":"init(scalar: Float, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/mul\/callasfunction(_:_:streamcontext:)","title":"func callAsFunction<T>(T, T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/mul","title":"Mul","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/pad\/init(_:begin:end:name:)","title":"init(Pad.Mode, begin: TensorShape, end: TensorShape, name: String)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/pad\/mode\/replication","title":"case replication","type":"case"},{"path":"\/documentation\/nnc\/pad\/mode\/zero","title":"case zero","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/pad\/mode\/clamptoedge","title":"static let clampToEdge: Pad.Mode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/pad\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/pad\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/pad\/mode","title":"Pad.Mode","type":"enum"}],"path":"\/documentation\/nnc\/pad","title":"Pad","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/parameter\/init(_:_:initbound:trainable:name:)","title":"init(DeviceKind, TensorShapeFormat, initBound: Float, trainable: Bool?, name: String)","type":"init"},{"path":"\/documentation\/nnc\/parameter\/init(_:format:shape:initbound:trainable:name:)","title":"init(DeviceKind, format: TensorFormat, shape: TensorShape, initBound: Float, trainable: Bool?, name: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/parameter\/io","title":"var io: Model.IO","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/parameter\/gelu(approximate:)","title":"func GELU(approximate: GELU.Approximate) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/relu()","title":"func ReLU() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/argmax(axis:)","title":"func argmax(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/argmin(axis:)","title":"func argmin(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Model.IO]","type":"method"},{"path":"\/documentation\/nnc\/parameter\/clamped(_:)-1ot64","title":"func clamped(PartialRangeThrough<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/clamped(_:)-646vp","title":"func clamped(PartialRangeFrom<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/clamped(_:)-6v8yq","title":"func clamped(ClosedRange<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/contiguous()","title":"func contiguous() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/debug(name:_:)","title":"func debug(name: String, ([(any AnyTensor)?], StreamContext?) -> Void) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/identity()","title":"func identity() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/leakyrelu(negativeslope:)","title":"func leakyReLU(negativeSlope: Float) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/moved(to:name:)","title":"func moved(to: any ModelIOConvertible, name: String) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/padded(_:begin:end:)","title":"func padded(Pad.Mode, begin: TensorShape, end: TensorShape) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/partitioned(kth:axis:descending:)","title":"func partitioned(kth: Int, axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/permuted(_:)","title":"func permuted(Int...) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/reciprocal()","title":"func reciprocal() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/reshaped(_:offset:strides:format:)","title":"func reshaped(TensorShape, offset: TensorShape?, strides: TensorShape?, format: TensorFormat?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/sigmoid()","title":"func sigmoid() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/softmax()","title":"func softmax() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/sorted(axis:descending:)","title":"func sorted(axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/squareroot()","title":"func squareRoot() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/swish()","title":"func swish() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/tanh()","title":"func tanh() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/to(_:)","title":"func to(DataType) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/to(of:)","title":"func to(of: any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/transposed(_:_:)","title":"func transposed(Int, Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/parameter\/uniqueconsecutive(count:)","title":"func uniqueConsecutive(count: Int) -> Model.IO","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/parameter\/subscript(_:)","title":"subscript(Int) -> Model.IO","type":"subscript"}],"path":"\/documentation\/nnc\/parameter\/modelioconvertible-implementations","title":"ModelIOConvertible Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/parameter","title":"Parameter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/partition\/init(kth:axis:descending:name:)","title":"init(kth: Int, axis: Int, descending: Bool, name: String)","type":"init"}],"path":"\/documentation\/nnc\/partition","title":"Partition","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/permute\/init(indices:name:)","title":"init(indices: [Int], name: String)","type":"init"}],"path":"\/documentation\/nnc\/permute","title":"Permute","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/rmsnorm\/init(epsilon:axis:trainable:name:)","title":"init(epsilon: Float, axis: [Int], trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/rmsnorm\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/rmsnorm","title":"RMSNorm","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/relu\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/relu\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/relu","title":"ReLU","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducemax\/init(axis:name:)","title":"init(axis: [Int], name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducemax\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/reducemax","title":"ReduceMax","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducemean\/init(axis:name:)","title":"init(axis: [Int], name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducemean\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/reducemean","title":"ReduceMean","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducemin\/init(axis:name:)","title":"init(axis: [Int], name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducemin\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/reducemin","title":"ReduceMin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducenorm2\/init(axis:name:)","title":"init(axis: [Int], name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducenorm2\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/reducenorm2","title":"ReduceNorm2","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducesum\/init(axis:name:)","title":"init(axis: [Int], name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/reducesum\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/reducesum","title":"ReduceSum","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/reshape\/init(dimensions:offset:strides:format:name:)","title":"init(dimensions: TensorShape, offset: TensorShape?, strides: TensorShape?, format: TensorFormat?, name: String)","type":"init"}],"path":"\/documentation\/nnc\/reshape","title":"Reshape","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/scalar\/init(_:format:value:of:name:)","title":"init<Element>(DeviceKind, format: TensorFormat, value: Float, of: Element.Type, name: String)","type":"init"}],"path":"\/documentation\/nnc\/scalar","title":"Scalar","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/scaleddotproductattention\/init(scale:iscausal:hasattentionmask:flags:multiheadoutputprojectionfused:nobias:trainable:name:)","title":"init(scale: Float, isCausal: Bool, hasAttentionMask: Bool, flags: Functional.GEMMFlag, multiHeadOutputProjectionFused: Bool, noBias: Bool, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/scaleddotproductattention\/callasfunction(queries:keys:values:attentionmask:streamcontext:)","title":"func callAsFunction<T>(queries: T, keys: T, values: T, attentionMask: T?, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/scaleddotproductattention","title":"ScaledDotProductAttention","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/scalmul\/init(_:name:)","title":"init(Float, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/scalmul\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/scalmul","title":"Scalmul","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/scatteradd\/init(count:name:)","title":"init(count: Int, name: String)","type":"init"}],"path":"\/documentation\/nnc\/scatteradd","title":"ScatterAdd","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/segmenteddense\/init(segments:count:nobias:flags:trainable:name:)","title":"init(segments: Int, count: Int, noBias: Bool, flags: Functional.GEMMFlag, trainable: Bool?, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/segmenteddense\/callasfunction(_:indices:counts:streamcontext:)","title":"func callAsFunction<T, U>(T, indices: U, counts: U, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/segmenteddense","title":"SegmentedDense","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/sigmoid\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sigmoid\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/sigmoid","title":"Sigmoid","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/softmax\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/softmax\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/softmax","title":"Softmax","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/sort\/init(axis:descending:name:)","title":"init(axis: Int, descending: Bool, name: String)","type":"init"}],"path":"\/documentation\/nnc\/sort","title":"Sort","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/squareroot\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/squareroot\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/squareroot","title":"SquareRoot","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/streamcontext\/init(_:)","title":"init(DeviceKind)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/streamcontext\/async(_:)","title":"func async(() -> Void)","type":"method"},{"path":"\/documentation\/nnc\/streamcontext\/joined()","title":"func joined()","type":"method"},{"path":"\/documentation\/nnc\/streamcontext\/setseed(_:)","title":"func setSeed(UInt32)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/streamcontext\/concurrency\/limit(_:)","title":"case limit(Int)","type":"case"},{"path":"\/documentation\/nnc\/streamcontext\/concurrency\/nolimit","title":"case noLimit","type":"case"}],"path":"\/documentation\/nnc\/streamcontext\/concurrency","title":"StreamContext.Concurrency","type":"enum"}],"path":"\/documentation\/nnc\/streamcontext","title":"StreamContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/sum\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sum\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T..., streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/sum","title":"Sum","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/swish\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/swish\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/swish","title":"Swish","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/tanh\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tanh\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/tanh","title":"Tanh","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/transpose\/init(_:_:name:)","title":"init(Int, Int, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/transpose\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/transpose","title":"Transpose","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/uniqueconsecutive\/init(count:name:)","title":"init(count: Int, name: String)","type":"init"}],"path":"\/documentation\/nnc\/uniqueconsecutive","title":"UniqueConsecutive","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/upsample\/init(_:widthscale:heightscale:aligncorners:name:)","title":"init(Upsample.Mode, widthScale: Float, heightScale: Float, alignCorners: Bool, name: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/upsample\/callasfunction(_:streamcontext:)","title":"func callAsFunction<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/upsample\/mode\/bilinear","title":"case bilinear","type":"case"},{"path":"\/documentation\/nnc\/upsample\/mode\/nearest","title":"case nearest","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/upsample\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/upsample\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/upsample\/mode","title":"Upsample.Mode","type":"enum"}],"path":"\/documentation\/nnc\/upsample","title":"Upsample","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/variable\/init(_:_:name:)","title":"init(DeviceKind, TensorShapeFormat, name: String)","type":"init"},{"path":"\/documentation\/nnc\/variable\/init(_:format:shape:name:)","title":"init(DeviceKind, format: TensorFormat, shape: TensorShape, name: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/variable\/io","title":"var io: Model.IO","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/variable\/gelu(approximate:)","title":"func GELU(approximate: GELU.Approximate) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/relu()","title":"func ReLU() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/argmax(axis:)","title":"func argmax(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/argmin(axis:)","title":"func argmin(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Model.IO]","type":"method"},{"path":"\/documentation\/nnc\/variable\/clamped(_:)-4jwlu","title":"func clamped(ClosedRange<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/clamped(_:)-5q299","title":"func clamped(PartialRangeFrom<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/clamped(_:)-75uks","title":"func clamped(PartialRangeThrough<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/contiguous()","title":"func contiguous() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/debug(name:_:)","title":"func debug(name: String, ([(any AnyTensor)?], StreamContext?) -> Void) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/identity()","title":"func identity() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/leakyrelu(negativeslope:)","title":"func leakyReLU(negativeSlope: Float) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/moved(to:name:)","title":"func moved(to: any ModelIOConvertible, name: String) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/padded(_:begin:end:)","title":"func padded(Pad.Mode, begin: TensorShape, end: TensorShape) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/partitioned(kth:axis:descending:)","title":"func partitioned(kth: Int, axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/permuted(_:)","title":"func permuted(Int...) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/reciprocal()","title":"func reciprocal() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/reshaped(_:offset:strides:format:)","title":"func reshaped(TensorShape, offset: TensorShape?, strides: TensorShape?, format: TensorFormat?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/sigmoid()","title":"func sigmoid() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/softmax()","title":"func softmax() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/sorted(axis:descending:)","title":"func sorted(axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/squareroot()","title":"func squareRoot() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/swish()","title":"func swish() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/tanh()","title":"func tanh() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/to(_:)","title":"func to(DataType) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/to(of:)","title":"func to(of: any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/transposed(_:_:)","title":"func transposed(Int, Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/variable\/uniqueconsecutive(count:)","title":"func uniqueConsecutive(count: Int) -> Model.IO","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/variable\/subscript(_:)","title":"subscript(Int) -> Model.IO","type":"subscript"}],"path":"\/documentation\/nnc\/variable\/modelioconvertible-implementations","title":"ModelIOConvertible Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/variable","title":"Variable","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/anymodel\/bias","title":"var bias: Model.Parameters","type":"property"},{"path":"\/documentation\/nnc\/anymodel\/maxconcurrency","title":"var maxConcurrency: StreamContext.Concurrency","type":"property"},{"path":"\/documentation\/nnc\/anymodel\/memoryreduction","title":"var memoryReduction: Bool","type":"property"},{"path":"\/documentation\/nnc\/anymodel\/parameters","title":"var parameters: Model.Parameters","type":"property"},{"path":"\/documentation\/nnc\/anymodel\/runtimememorysize","title":"var runtimeMemorySize: UInt64","type":"property"},{"path":"\/documentation\/nnc\/anymodel\/testing","title":"var testing: Bool","type":"property"},{"path":"\/documentation\/nnc\/anymodel\/weight","title":"var weight: Model.Parameters","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/anymodel\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/nnc\/anymodel\/parameters(for:)","title":"func parameters(for: Model.ParametersType) -> Model.Parameters","type":"method"}],"path":"\/documentation\/nnc\/anymodel","title":"AnyModel","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/anytensor\/init(from:)","title":"init(from: any AnyTensor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/anytensor\/ctensor","title":"var cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/datatype","title":"var dataType: DataType","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/format","title":"var format: TensorFormat","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/iscontiguous","title":"var isContiguous: Bool","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/istensorview","title":"var isTensorView: Bool","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/kind","title":"var kind: DeviceKind","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/shape","title":"var shape: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/storage","title":"var storage: AnyTensorStorage","type":"property"},{"path":"\/documentation\/nnc\/anytensor\/strides","title":"var strides: TensorShape","type":"property"}],"path":"\/documentation\/nnc\/anytensor","title":"AnyTensor","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataseries\/next()","title":"func next() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataseries\/next(_:)","title":"func next(StreamContext?) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataseries\/prefetch(_:)","title":"func prefetch(Int)","type":"method"},{"path":"\/documentation\/nnc\/dataseries\/prefetch(_:streamcontext:)","title":"func prefetch(Int, streamContext: StreamContext?)","type":"method"}],"path":"\/documentation\/nnc\/dataseries","title":"DataSeries","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/format","title":"var format: TensorFormat","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/graph","title":"var graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/isconstant","title":"var isConstant: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/iscontiguous","title":"var isContiguous: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/kind","title":"var kind: DeviceKind","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/requiresgrad","title":"var requiresGrad: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/shape","title":"var shape: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/strides","title":"var strides: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_any\/untyped","title":"var untyped: [DynamicGraph.AnyTensor]","type":"property"}],"path":"\/documentation\/nnc\/dynamicgraph_any","title":"DynamicGraph_Any","type":"protocol"},{"path":"\/documentation\/nnc\/dynamicgraph_anygroup","title":"DynamicGraph_AnyGroup","type":"protocol"},{"path":"\/documentation\/nnc\/dynamicgraph_anyparameters","title":"DynamicGraph_AnyParameters","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_anytensorgroup\/anytensor","title":"AnyTensor","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_anytensorgroup\/evaluate(model:testing:dataparallel:inputs:outputsize:streamcontext:)","title":"static func evaluate(model: OpaquePointer, testing: Bool, dataParallel: inout Int?, inputs: [(any DynamicGraph_Any)?], outputSize: Int32, streamContext: StreamContext?) -> [Self.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_anytensorgroup\/exec(cmd:hint:inputs:outputsize:streamcontext:)","title":"static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [(any DynamicGraph_Any)?], outputSize: Int32, streamContext: StreamContext?) -> [Self.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_anytensorgroup\/exec(cmd:hint:inputs:outputs:streamcontext:)","title":"static func exec(cmd: ccv_nnc_cmd_t, hint: ccv_nnc_hint_t, inputs: [(any DynamicGraph_Any)?], outputs: [any DynamicGraph_Any], streamContext: StreamContext?)","type":"method"}],"path":"\/documentation\/nnc\/dynamicgraph_anytensorgroup","title":"DynamicGraph_AnyTensorGroup","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/elementnumeric","title":"ElementNumeric","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/init(_:)","title":"init(Self.AnyTensor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/grad","title":"var grad: Self.AnyTensor?","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/typeerased","title":"var typeErased: Self.AnyTensor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/relu()","title":"func ReLU()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/relu(streamcontext:)","title":"func ReLU(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Self]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/chunked(_:axis:streamcontext:)","title":"func chunked(Int, axis: Int, streamContext: StreamContext?) -> [Self]","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamp(_:)-44fqj","title":"func clamp(PartialRangeFrom<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamp(_:)-556ak","title":"func clamp(PartialRangeThrough<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamp(_:)-sner","title":"func clamp(ClosedRange<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamp(_:streamcontext:)-3783t","title":"func clamp(PartialRangeThrough<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamp(_:streamcontext:)-8mvnw","title":"func clamp(PartialRangeFrom<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamp(_:streamcontext:)-9own","title":"func clamp(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamped(_:)-5vqy","title":"func clamped(PartialRangeFrom<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamped(_:)-6ie7x","title":"func clamped(ClosedRange<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamped(_:)-7e7jr","title":"func clamped(PartialRangeThrough<Float>) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamped(_:streamcontext:)-4b5y2","title":"func clamped(PartialRangeThrough<Float>, streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamped(_:streamcontext:)-5hlgk","title":"func clamped(PartialRangeFrom<Float>, streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/clamped(_:streamcontext:)-d14x","title":"func clamped(ClosedRange<Float>, streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/contiguous()","title":"func contiguous() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/contiguous(streamcontext:)","title":"func contiguous(streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/copied()","title":"func copied() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/copied(streamcontext:)","title":"func copied(streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/detach()","title":"func detach()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/full(_:)","title":"func full(Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/full(_:streamcontext:)","title":"func full(Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/lerp(_:to:)","title":"func lerp(Float, to: Self)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/lerp(_:to:streamcontext:)","title":"func lerp(Float, to: Self, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/rand(_:)","title":"func rand(ClosedRange<Float>)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/rand(_:streamcontext:)","title":"func rand(ClosedRange<Float>, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/randn(std:mean:)","title":"func randn(std: Float, mean: Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/randn(std:mean:streamcontext:)","title":"func randn(std: Float, mean: Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/reduced(_:axis:streamcontext:)","title":"func reduced(ReduceOp, axis: [Int], streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/scale(by:)","title":"func scale(by: Float)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/scale(by:streamcontext:)","title":"func scale(by: Float, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/scaled(by:)","title":"func scaled(by: Float) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/scaled(by:streamcontext:)","title":"func scaled(by: Float, streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/sigmoid()","title":"func sigmoid()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/sigmoid(streamcontext:)","title":"func sigmoid(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/softmax()","title":"func softmax()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/softmax(streamcontext:)","title":"func softmax(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/swish()","title":"func swish()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/swish(streamcontext:)","title":"func swish(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/tanh()","title":"func tanh()","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/tanh(streamcontext:)","title":"func tanh(streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/tocpu()","title":"func toCPU() -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/tocpu(streamcontext:)","title":"func toCPU(streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/togpu(_:)","title":"func toGPU(Int) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/togpu(_:streamcontext:)","title":"func toGPU(Int, streamContext: StreamContext?) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/transposed(_:_:)","title":"func transposed(Int, Int) -> Self","type":"method"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/transposed(_:_:streamcontext:)","title":"func transposed(Int, Int, streamContext: StreamContext?) -> Self","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:)-60ine","title":"subscript((UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:)-639av","title":"subscript(Range<Int>...) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:)-71xfq","title":"subscript(Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:)-8k468","title":"subscript([Range<Int>]) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:)-1jaig","title":"subscript(Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:)-6pryl","title":"subscript(Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:)-4req6","title":"subscript(Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:)-4ui0w","title":"subscript(Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:)-36e5r","title":"subscript(Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:)-6ngj9","title":"subscript(Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:)-1pq0f","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:)-9rdk6","title":"subscript(Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:)-5mcya","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:)-80gm5","title":"subscript(Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:)-82xx","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:)-9qwxy","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:_:)-6nang","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:_:)-9tzp5","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:_:streamcontext:)-47bmm","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:_:streamcontext:)-4vrcs","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:streamcontext:)-1k21w","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:_:streamcontext:)-5fn2h","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:streamcontext:)-3g5g2","title":"subscript(Int, Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:_:streamcontext:)-5mqt8","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:streamcontext:)-8k5zs","title":"subscript(Int, Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:_:streamcontext:)-96y7","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:streamcontext:)-6zxc9","title":"subscript(Int, Int, Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:_:streamcontext:)-m8qj","title":"subscript(Int, Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:streamcontext:)-1a6se","title":"subscript(Int, Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:_:streamcontext:)-7h7fb","title":"subscript(Int, Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:streamcontext:)-31niv","title":"subscript(Int, Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:_:streamcontext:)-4m48l","title":"subscript(Int, (UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:streamcontext:)-1ve4a","title":"subscript((UnboundedRange_) -> (), streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:streamcontext:)-6bwaj","title":"subscript(Range<Int>..., streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:streamcontext:)-84pms","title":"subscript([Range<Int>], streamContext _: StreamContext?) -> Self","type":"subscript"},{"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup\/subscript(_:streamcontext:)-fhcw","title":"subscript(Range<Int>, streamContext _: StreamContext?) -> Self","type":"subscript"}],"path":"\/documentation\/nnc\/dynamicgraph_tensorgroup","title":"DynamicGraph_TensorGroup","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/loss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"},{"path":"\/documentation\/nnc\/loss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/loss","title":"Loss","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/modelioconvertible\/io","title":"var io: Model.IO","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/modelioconvertible\/gelu(approximate:)","title":"func GELU(approximate: GELU.Approximate) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/relu()","title":"func ReLU() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/argmax(axis:)","title":"func argmax(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/argmin(axis:)","title":"func argmin(axis: Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/chunked(_:axis:)","title":"func chunked(Int, axis: Int) -> [Model.IO]","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/clamped(_:)-1n96p","title":"func clamped(PartialRangeThrough<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/clamped(_:)-1oujq","title":"func clamped(ClosedRange<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/clamped(_:)-7e7e4","title":"func clamped(PartialRangeFrom<Float>) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/contiguous()","title":"func contiguous() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/copied()","title":"func copied() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/debug(name:_:)","title":"func debug(name: String, ([(any AnyTensor)?], StreamContext?) -> Void) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/identity()","title":"func identity() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/leakyrelu(negativeslope:)","title":"func leakyReLU(negativeSlope: Float) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/moved(to:name:)","title":"func moved(to: any ModelIOConvertible, name: String) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/padded(_:begin:end:)","title":"func padded(Pad.Mode, begin: TensorShape, end: TensorShape) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/partitioned(kth:axis:descending:)","title":"func partitioned(kth: Int, axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/permuted(_:)","title":"func permuted(Int...) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/reciprocal()","title":"func reciprocal() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/reduced(_:axis:)","title":"func reduced(ReduceOp, axis: [Int]) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/reshaped(_:offset:strides:format:)","title":"func reshaped(TensorShape, offset: TensorShape?, strides: TensorShape?, format: TensorFormat?) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/sigmoid()","title":"func sigmoid() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/softmax()","title":"func softmax() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/sorted(axis:descending:)","title":"func sorted(axis: Int, descending: Bool) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/squareroot()","title":"func squareRoot() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/swish()","title":"func swish() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/tanh()","title":"func tanh() -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/to(_:)","title":"func to(DataType) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/to(of:)","title":"func to(of: any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/transposed(_:_:)","title":"func transposed(Int, Int) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/modelioconvertible\/uniqueconsecutive(count:)","title":"func uniqueConsecutive(count: Int) -> Model.IO","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/modelioconvertible\/subscript(_:)","title":"subscript(Int) -> Model.IO","type":"subscript"}],"path":"\/documentation\/nnc\/modelioconvertible","title":"ModelIOConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/optimizer\/graph","title":"var graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/optimizer\/parameters","title":"var parameters: [any DynamicGraph_AnyParameters]","type":"property"},{"path":"\/documentation\/nnc\/optimizer\/scale","title":"var scale: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/optimizer\/step()","title":"func step()","type":"method"},{"path":"\/documentation\/nnc\/optimizer\/step(streamcontext:)","title":"func step(streamContext: StreamContext?)","type":"method"}],"path":"\/documentation\/nnc\/optimizer","title":"Optimizer","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensornumeric\/datatype","title":"static var dataType: DataType","type":"property"}],"path":"\/documentation\/nnc\/tensornumeric","title":"TensorNumeric","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamoptimizer\/init(_:rate:step:betas:decay:epsilon:amsgrad:)","title":"init(DynamicGraph, rate: Float, step: Int, betas: (Float, Float), decay: Float, epsilon: Float, amsgrad: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamoptimizer\/amsgrad","title":"var amsgrad: Bool","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/betas","title":"var betas: (Float, Float)","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/decay","title":"var decay: Float","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/epsilon","title":"var epsilon: Float","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/graph","title":"let graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/parameters","title":"var parameters: [any DynamicGraph_AnyParameters]","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/rate","title":"var rate: Float","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/scale","title":"var scale: Float","type":"property"},{"path":"\/documentation\/nnc\/adamoptimizer\/step","title":"var step: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamoptimizer\/step(streamcontext:)","title":"func step(streamContext: StreamContext?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamoptimizer\/step()","title":"func step()","type":"method"}],"path":"\/documentation\/nnc\/adamoptimizer\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/adamoptimizer","title":"AdamOptimizer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamwoptimizer\/init(_:rate:step:betas:decay:epsilon:amsgrad:)","title":"init(DynamicGraph, rate: Float, step: Int, betas: (Float, Float), decay: Float, epsilon: Float, amsgrad: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamwoptimizer\/amsgrad","title":"var amsgrad: Bool","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/betas","title":"var betas: (Float, Float)","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/decay","title":"var decay: Float","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/epsilon","title":"var epsilon: Float","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/graph","title":"let graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/parameters","title":"var parameters: [any DynamicGraph_AnyParameters]","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/rate","title":"var rate: Float","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/scale","title":"var scale: Float","type":"property"},{"path":"\/documentation\/nnc\/adamwoptimizer\/step","title":"var step: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamwoptimizer\/step(streamcontext:)","title":"func step(streamContext: StreamContext?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/adamwoptimizer\/step()","title":"func step()","type":"method"}],"path":"\/documentation\/nnc\/adamwoptimizer\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/adamwoptimizer","title":"AdamWOptimizer","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/*(_:_:)","title":"static func * (BFloat16, BFloat16) -> BFloat16","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/*=(_:_:)","title":"static func *= (inout BFloat16, BFloat16)","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/+(_:_:)","title":"static func + (BFloat16, BFloat16) -> BFloat16","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/+=(_:_:)-7st9l","title":"static func += (inout BFloat16, BFloat16)","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/-(_:_:)","title":"static func - (BFloat16, BFloat16) -> BFloat16","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/-=(_:_:)-7tdvl","title":"static func -= (inout BFloat16, BFloat16)","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/_(_:_:)-44iw5","title":"static func < (BFloat16, BFloat16) -> Bool","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/_(_:_:)-4p4ow","title":"static func \/ (BFloat16, BFloat16) -> BFloat16","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/init(_:)-4fi1a","title":"init(Float)","type":"init"},{"path":"\/documentation\/nnc\/bfloat16\/init(_:)-572hp","title":"init(Int)","type":"init"},{"path":"\/documentation\/nnc\/bfloat16\/init(_:)-6nm4z","title":"init(Double)","type":"init"},{"path":"\/documentation\/nnc\/bfloat16\/init(bitpattern:)","title":"init(bitPattern: UInt16)","type":"init"},{"path":"\/documentation\/nnc\/bfloat16\/init(exactly:)","title":"init?<T>(exactly: T)","type":"init"},{"path":"\/documentation\/nnc\/bfloat16\/init(floatliteral:)","title":"init(floatLiteral: Double)","type":"init"},{"path":"\/documentation\/nnc\/bfloat16\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/bitpattern","title":"var bitPattern: UInt16","type":"property"},{"path":"\/documentation\/nnc\/bfloat16\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nnc\/bfloat16\/floatvalue","title":"var floatValue: Float","type":"property"},{"path":"\/documentation\/nnc\/bfloat16\/magnitude-swift.property","title":"var magnitude: BFloat16.Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/magnitude-swift.typealias","title":"BFloat16.Magnitude","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/+=(_:_:)-5m06","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/-=(_:_:)-6ff0l","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/nnc\/bfloat16\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/'...(_:)-1tbr8","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/'...(_:)-8dfyh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/_(_:_:)-zevy","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/_=(_:_:)-87kr8","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/nnc\/bfloat16\/_=(_:_:)-igdq","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/bfloat16\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/nnc\/bfloat16\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/bfloat16\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/bfloat16\/datatype","title":"static var dataType: DataType","type":"property"}],"path":"\/documentation\/nnc\/bfloat16\/tensornumeric-implementations","title":"TensorNumeric Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/bfloat16","title":"BFloat16","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/binarycrossentropyloss\/init(posweight:)","title":"init(posWeight: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/binarycrossentropyloss\/posweight","title":"var posWeight: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/binarycrossentropyloss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/binarycrossentropyloss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/binarycrossentropyloss\/loss-implementations","title":"Loss Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/binarycrossentropyloss","title":"BinaryCrossEntropyLoss","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/categoricalcrossentropyloss\/init(trim0:trim1:)","title":"init(trim0: Float, trim1: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/categoricalcrossentropyloss\/trim0","title":"var trim0: Float","type":"property"},{"path":"\/documentation\/nnc\/categoricalcrossentropyloss\/trim1","title":"var trim1: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/categoricalcrossentropyloss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/categoricalcrossentropyloss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/categoricalcrossentropyloss\/loss-implementations","title":"Loss Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/categoricalcrossentropyloss","title":"CategoricalCrossEntropyLoss","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/combine(size:repeating:)","title":"func combine(size: Int, repeating: Int?) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/makeiterator()","title":"func makeIterator() -> DataSeriesIterator<DataFrame.ManyUntypedSeries>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-15ou5","title":"func map<C0, C1, C2, C3, C4, C5, C6, U>((C0, C1, C2, C3, C4, C5, C6) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-1ouk7","title":"func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, U>((C0, C1, C2, C3, C4, C5, C6, C7, C8) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-2p7ww","title":"func map<C0, C1, C2, U>((C0, C1, C2) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-4g58","title":"func map<C0, C1, C2, C3, C4, C5, U>((C0, C1, C2, C3, C4, C5) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-67gx6","title":"func map<C0, C1, C2, C3, C4, U>((C0, C1, C2, C3, C4) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-6xdbf","title":"func map<C0, C1, C2, C3, U>((C0, C1, C2, C3) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-7xz4r","title":"func map<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9, U>((C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-994ow","title":"func map<C0, C1, U>((C0, C1) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-9j1a","title":"func map<C0, C1, C2, C3, C4, C5, C6, C7, U>((C0, C1, C2, C3, C4, C5, C6, C7) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/next(_:)","title":"func next(StreamContext?) -> [AnyObject]?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/prefetch(_:streamcontext:)","title":"func prefetch(Int, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/sample(size:repeating:sampler:)-3h6w8","title":"func sample<C0, C1, U0, U1>(size: Int, repeating: Int?, sampler: ([(C0, C1)]) -> (U0, U1)) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/sample(size:repeating:sampler:)-9b6lc","title":"func sample<C0, C1, C2, U0, U1, U2>(size: Int, repeating: Int?, sampler: ([(C0, C1, C2)]) -> (U0, U1, U2)) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/sample(size:repeating:sampler:)-lnpg","title":"func sample<C0, C1, C2, C3, U0, U1, U2, U3>(size: Int, repeating: Int?, sampler: ([(C0, C1, C2, C3)]) -> (U0, U1, U2, U3)) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/togpu(_:)","title":"func toGPU(Int) -> DataFrame.ManyUntypedSeriesTensorResult","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/element","title":"DataFrame.ManyUntypedSeries.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/next()","title":"func next() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/prefetch(_:)","title":"func prefetch(Int)","type":"method"}],"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/dataseries-implementations","title":"DataSeries Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/all(_:)","title":"func all((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/any(_:)","title":"func any((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/flatmap(_:)-1ua20","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/flatmap(_:)-9nurf","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/map(_:)-9unjo","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/none(_:)","title":"func none((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dataframe\/manyuntypedseries","title":"DataFrame.ManyUntypedSeries","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseriestensorresult\/subscript(_:)-5rcqm","title":"subscript(String) -> DataFrame.UntypedSeries","type":"subscript"},{"path":"\/documentation\/nnc\/dataframe\/manyuntypedseriestensorresult\/subscript(_:)-6qzat","title":"subscript(Int) -> DataFrame.UntypedSeries","type":"subscript"}],"path":"\/documentation\/nnc\/dataframe\/manyuntypedseriestensorresult","title":"DataFrame.ManyUntypedSeriesTensorResult","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/combine(size:repeating:)","title":"func combine(size: Int, repeating: Int?) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/makeiterator()","title":"func makeIterator() -> DataSeriesIterator<DataFrame.TypedSeries<Element>>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/map(_:)-64fa4","title":"func map<U>((Element) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/next(_:)","title":"func next(StreamContext?) -> Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/prefetch(_:streamcontext:)","title":"func prefetch(Int, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/sample(size:repeating:sampler:)","title":"func sample<U>(size: Int, repeating: Int?, sampler: ([Element]) -> U) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/togpu(_:)","title":"func toGPU(Int) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/toimagejitter(_:size:resize:contrast:saturation:brightness:lighting:aspectratio:symmetric:seed:centercrop:offset:normalize:)","title":"func toImageJitter<T>(T.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float, saturation: Float, brightness: Float, lighting: Float, aspectRatio: Float, symmetric: Bool, seed: Int, centerCrop: Bool, offset: ImageJitter.Offset, normalize: ImageJitter.Normalize) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/toloadimage()","title":"func toLoadImage() -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/toonehot(_:count:onval:offval:)","title":"func toOneHot<T>(T.Type, count: Int, onval: Float, offval: Float) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/toonesquared(maxlength:variablelength:)","title":"func toOneSquared(maxLength: Int, variableLength: Bool) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/totruncate(_:)-545bx","title":"func toTruncate(DataFrame.UntypedSeries) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/totruncate(_:)-9rrt2","title":"func toTruncate<OtherElement>(DataFrame.TypedSeries<OtherElement>) -> DataFrame.UntypedSeries","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/element","title":"DataFrame.TypedSeries.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/next()","title":"func next() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/prefetch(_:)","title":"func prefetch(Int)","type":"method"}],"path":"\/documentation\/nnc\/dataframe\/typedseries\/dataseries-implementations","title":"DataSeries Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/all(_:)","title":"func all((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/any(_:)","title":"func any((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/flatmap(_:)-23idx","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/flatmap(_:)-9nxtt","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/joined(separator:)-1dumx","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/joined(separator:)-7k1yi","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/map(_:)-5tyou","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/none(_:)","title":"func none((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/typedseries\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/nnc\/dataframe\/typedseries\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dataframe\/typedseries","title":"DataFrame.TypedSeries","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/combine(size:repeating:)","title":"func combine(size: Int, repeating: Int?) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/makeiterator()","title":"func makeIterator() -> DataSeriesIterator<DataFrame.UntypedSeries>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/map(_:)-1v0ou","title":"func map<T, U>((T) -> U) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/next(_:)","title":"func next(StreamContext?) -> AnyObject?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/prefetch(_:streamcontext:)","title":"func prefetch(Int, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/sample(size:repeating:sampler:)","title":"func sample<T, U>(size: Int, repeating: Int?, sampler: ([T]) -> U) -> DataFrame","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/togpu(_:)","title":"func toGPU(Int) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/toimagejitter(_:size:resize:contrast:saturation:brightness:lighting:aspectratio:symmetric:seed:centercrop:offset:normalize:)","title":"func toImageJitter<Element>(Element.Type, size: ImageJitter.Size, resize: ImageJitter.Resize, contrast: Float, saturation: Float, brightness: Float, lighting: Float, aspectRatio: Float, symmetric: Bool, seed: Int, centerCrop: Bool, offset: ImageJitter.Offset, normalize: ImageJitter.Normalize) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/toloadimage()","title":"func toLoadImage() -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/toonehot(_:count:onval:offval:)","title":"func toOneHot<Element>(Element.Type, count: Int, onval: Float, offval: Float) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/toonesquared(maxlength:variablelength:)","title":"func toOneSquared(maxLength: Int, variableLength: Bool) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/totruncate(_:)-7ekyk","title":"func toTruncate(DataFrame.UntypedSeries) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/totruncate(_:)-8lf7r","title":"func toTruncate<Element>(DataFrame.TypedSeries<Element>) -> DataFrame.UntypedSeries","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/element","title":"DataFrame.UntypedSeries.Element","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/from(_:)-3ivcj","title":"static func from<S>(S) -> DataFrame.UntypedSeries","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/from(_:)-58rx9","title":"static func from(Any) -> DataFrame.UntypedSeries","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/next()","title":"func next() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/prefetch(_:)","title":"func prefetch(Int)","type":"method"}],"path":"\/documentation\/nnc\/dataframe\/untypedseries\/dataseries-implementations","title":"DataSeries Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/all(_:)","title":"func all((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/any(_:)","title":"func any((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/flatmap(_:)-1lssn","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/flatmap(_:)-5gjz6","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/map(_:)-2u0qc","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/none(_:)","title":"func none((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/dataframe\/untypedseries\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/nnc\/dataframe\/untypedseries\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/dataframe\/untypedseries","title":"DataFrame.UntypedSeries","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/init(from:name:)","title":"init<S>(from: S, name: String)","type":"init"},{"path":"\/documentation\/nnc\/dataframe\/init(fromcsv:automaticuseheader:delimiter:quotation:)","title":"init?(fromCSV: String, automaticUseHeader: Bool, delimiter: String, quotation: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/columns","title":"var columns: [String]","type":"property"},{"path":"\/documentation\/nnc\/dataframe\/count","title":"var count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/shuffle()","title":"func shuffle()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataframe\/subscript(_:)-2dcyx","title":"subscript(String) -> DataFrame.UntypedSeries?","type":"subscript"},{"path":"\/documentation\/nnc\/dataframe\/subscript(_:)-5ylxv","title":"subscript<S>(S) -> DataFrame.ManyUntypedSeries","type":"subscript"},{"path":"\/documentation\/nnc\/dataframe\/subscript(_:_:)","title":"subscript<Element>(String, Element.Type) -> DataFrame.TypedSeries<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/dataframe\/subscript(_:_:_:)","title":"subscript(String, String, String...) -> DataFrame.ManyUntypedSeries","type":"subscript"}],"path":"\/documentation\/nnc\/dataframe","title":"DataFrame","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataseriesiterator\/init(_:)","title":"init(S)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataseriesiterator\/next()","title":"func next() -> DataSeriesIterator<S>.Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/dataseriesiterator\/element","title":"DataSeriesIterator.Element","type":"typealias"}],"path":"\/documentation\/nnc\/dataseriesiterator","title":"DataSeriesIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/gradscaler\/init(scale:growthfactor:backofffactor:growthinterval:)","title":"init(scale: Float, growthFactor: Float, backoffFactor: Float, growthInterval: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/gradscaler\/backofffactor","title":"var backoffFactor: Float","type":"property"},{"path":"\/documentation\/nnc\/gradscaler\/growthfactor","title":"var growthFactor: Float","type":"property"},{"path":"\/documentation\/nnc\/gradscaler\/growthinterval","title":"var growthInterval: Int","type":"property"},{"path":"\/documentation\/nnc\/gradscaler\/scale","title":"var scale: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/gradscaler\/scale(_:streamcontext:)","title":"func scale<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/gradscaler\/step(_:streamcontext:)-1r6so","title":"func step<T>(inout T, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/gradscaler\/step(_:streamcontext:)-3wt6v","title":"func step<T>(inout [T], streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/gradscaler\/unscale(_:streamcontext:)-2me77","title":"func unscale<T>([T], streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/gradscaler\/unscale(_:streamcontext:)-8astg","title":"func unscale<T>(T, streamContext: StreamContext?)","type":"method"}],"path":"\/documentation\/nnc\/gradscaler","title":"GradScaler","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/hint\/border-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/nnc\/hint\/border-swift.struct\/init(_:)","title":"init([Int])","type":"init"},{"path":"\/documentation\/nnc\/hint\/border-swift.struct\/init(begin:end:)","title":"init(begin: [Int], end: [Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/hint\/border-swift.struct\/begin","title":"var begin: [Int]","type":"property"},{"path":"\/documentation\/nnc\/hint\/border-swift.struct\/end","title":"var end: [Int]","type":"property"}],"path":"\/documentation\/nnc\/hint\/border-swift.struct","title":"Hint.Border","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/hint\/init()","title":"init()","type":"init"},{"path":"\/documentation\/nnc\/hint\/init(stride:border:)","title":"init(stride: [Int], border: Hint.Border)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/hint\/border-swift.property","title":"var border: Hint.Border","type":"property"},{"path":"\/documentation\/nnc\/hint\/stride","title":"var stride: [Int]","type":"property"}],"path":"\/documentation\/nnc\/hint","title":"Hint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/lamboptimizer\/init(_:rate:step:betas:decay:epsilon:)","title":"init(DynamicGraph, rate: Float, step: Int, betas: (Float, Float), decay: Float, epsilon: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/lamboptimizer\/betas","title":"var betas: (Float, Float)","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/decay","title":"var decay: Float","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/epsilon","title":"var epsilon: Float","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/graph","title":"let graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/parameters","title":"var parameters: [any DynamicGraph_AnyParameters]","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/rate","title":"var rate: Float","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/scale","title":"var scale: Float","type":"property"},{"path":"\/documentation\/nnc\/lamboptimizer\/step","title":"var step: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/lamboptimizer\/step(streamcontext:)","title":"func step(streamContext: StreamContext?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/lamboptimizer\/step()","title":"func step()","type":"method"}],"path":"\/documentation\/nnc\/lamboptimizer\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/lamboptimizer","title":"LAMBOptimizer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/mseloss\/init(_:)","title":"init(MSELoss.ReduceOp)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/mseloss\/reduceop-swift.property","title":"var reduceOp: MSELoss.ReduceOp","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/mseloss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/mseloss\/reduceop-swift.enum\/mean","title":"case mean","type":"case"},{"path":"\/documentation\/nnc\/mseloss\/reduceop-swift.enum\/sum","title":"case sum","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/mseloss\/reduceop-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/mseloss\/reduceop-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/mseloss\/reduceop-swift.enum","title":"MSELoss.ReduceOp","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/mseloss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/mseloss\/loss-implementations","title":"Loss Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/mseloss","title":"MSELoss","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/sgdoptimizer\/init(_:nesterov:rate:scale:decay:momentum:dampening:)","title":"init(DynamicGraph, nesterov: Bool, rate: Float, scale: Float, decay: Float, momentum: Float, dampening: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/sgdoptimizer\/dampening","title":"var dampening: Float","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/decay","title":"var decay: Float","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/graph","title":"let graph: DynamicGraph","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/momentum","title":"var momentum: Float","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/nesterov","title":"var nesterov: Bool","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/parameters","title":"var parameters: [any DynamicGraph_AnyParameters]","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/rate","title":"var rate: Float","type":"property"},{"path":"\/documentation\/nnc\/sgdoptimizer\/scale","title":"var scale: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sgdoptimizer\/step(streamcontext:)","title":"func step(streamContext: StreamContext?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sgdoptimizer\/step()","title":"func step()","type":"method"}],"path":"\/documentation\/nnc\/sgdoptimizer\/optimizer-implementations","title":"Optimizer Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/sgdoptimizer","title":"SGDOptimizer","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/sequential\/component","title":"Sequential.Component","type":"typealias"},{"path":"\/documentation\/nnc\/sequential\/expression","title":"Sequential.Expression","type":"typealias"},{"path":"\/documentation\/nnc\/sequential\/finalresult","title":"Sequential.FinalResult","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sequential\/buildarray(_:)","title":"static func buildArray([Sequential.Component]) -> Sequential.Component","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildblock(_:)-4scxz","title":"static func buildBlock(Sequential.Component) -> Sequential.Component","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildblock(_:)-9dlq5","title":"static func buildBlock(Sequential.Component...) -> Sequential.Component","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildeither(first:)","title":"static func buildEither(first: Sequential.Component) -> Sequential.Component","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildeither(second:)","title":"static func buildEither(second: Sequential.Component) -> Sequential.Component","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildexpression(_:)","title":"static func buildExpression(Sequential.Expression) -> Sequential.Component","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildfinalresult(_:)","title":"static func buildFinalResult(Sequential.Component) -> Sequential.FinalResult","type":"method"},{"path":"\/documentation\/nnc\/sequential\/buildoptional(_:)","title":"static func buildOptional(Sequential.Component?) -> Sequential.Component","type":"method"}],"path":"\/documentation\/nnc\/sequential","title":"Sequential","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/sigmoidbinarycrossentropyloss\/init(posweight:)","title":"init(posWeight: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/sigmoidbinarycrossentropyloss\/posweight","title":"var posWeight: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sigmoidbinarycrossentropyloss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/sigmoidbinarycrossentropyloss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/sigmoidbinarycrossentropyloss\/loss-implementations","title":"Loss Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/sigmoidbinarycrossentropyloss","title":"SigmoidBinaryCrossEntropyLoss","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/smoothl1loss\/init(beta:)","title":"init(beta: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/smoothl1loss\/beta","title":"var beta: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/smoothl1loss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/smoothl1loss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/smoothl1loss\/loss-implementations","title":"Loss Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/smoothl1loss","title":"SmoothL1Loss","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/softmaxcrossentropyloss\/init(trim0:trim1:)","title":"init(trim0: Float, trim1: Float)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/softmaxcrossentropyloss\/trim0","title":"var trim0: Float","type":"property"},{"path":"\/documentation\/nnc\/softmaxcrossentropyloss\/trim1","title":"var trim1: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/softmaxcrossentropyloss\/callasfunction(_:target:streamcontext:)","title":"func callAsFunction<T, U>(T, target: U, streamContext: StreamContext?) -> [T.AnyTensor]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/softmaxcrossentropyloss\/callasfunction(_:target:)","title":"func callAsFunction<T, U>(T, target: U) -> [T.AnyTensor]","type":"method"}],"path":"\/documentation\/nnc\/softmaxcrossentropyloss\/loss-implementations","title":"Loss Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/softmaxcrossentropyloss","title":"SoftmaxCrossEntropyLoss","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/init(_:)-2h5f0","title":"init(any AnyTensor)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(_:)-8yirj","title":"init([Element])","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(_:_:)","title":"init(DeviceKind, TensorShapeFormat)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(_:_:_:)","title":"init<S>(S, DeviceKind, TensorShapeFormat)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(_:format:shape:)","title":"init(DeviceKind, format: TensorFormat, shape: TensorShape)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(_:format:shape:unsafemutablepointer:bindlifetimeof:)","title":"init(DeviceKind, format: TensorFormat, shape: TensorShape, unsafeMutablePointer: UnsafeMutablePointer<Element>, bindLifetimeOf: Any)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(_:kind:format:shape:)","title":"init<S>(S, kind: DeviceKind, format: TensorFormat, shape: TensorShape)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(data:using:)","title":"init?(data: Data, using: DynamicGraph.Store.Codec)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(from:)","title":"init(from: any AnyTensor)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(mjarray:)","title":"init(mjArray: MjArray<Element>)","type":"init"},{"path":"\/documentation\/nnc\/tensor\/init(numpy:)","title":"init(numpy: PythonObject) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/ctensor","title":"var cTensor: UnsafeMutablePointer<ccv_nnc_tensor_t>","type":"property"},{"path":"\/documentation\/nnc\/tensor\/isnan","title":"var isNaN: Bool","type":"property"},{"path":"\/documentation\/nnc\/tensor\/storage","title":"var storage: AnyTensorStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/contiguous()","title":"func contiguous() -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/copied()","title":"func copied() -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/data(using:)","title":"func data(using: DynamicGraph.Store.Codec) -> Data","type":"method"},{"path":"\/documentation\/nnc\/tensor\/makenumpyarray()","title":"func makeNumpyArray() -> PythonObject","type":"method"},{"path":"\/documentation\/nnc\/tensor\/permuted(_:)","title":"func permuted(Int...) -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/reshaped(_:offset:strides:)","title":"func reshaped(TensorShapeFormat, offset: TensorShape?, strides: TensorShape?) -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/reshaped(format:shape:offset:strides:)","title":"func reshaped(format: TensorFormat, shape: TensorShape, offset: TensorShape?, strides: TensorShape?) -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/tocpu(streamcontext:)","title":"func toCPU(streamContext: StreamContext?) -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/togpu(_:streamcontext:)","title":"func toGPU(Int, streamContext: StreamContext?) -> Tensor<Element>","type":"method"},{"path":"\/documentation\/nnc\/tensor\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"},{"path":"\/documentation\/nnc\/tensor\/withunsafemutablebytes(_:)","title":"func withUnsafeMutableBytes<R>((UnsafeMutableRawBufferPointer) throws -> R) rethrows -> R","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:)-4bihy","title":"subscript((UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:)-62cld","title":"subscript(Int...) -> Element","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:)-7e74l","title":"subscript(Range<Int>...) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:)-9gsvu","title":"subscript(Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:)-7qi9x","title":"subscript(Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:)-7sh1c","title":"subscript(Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:)-2mjmx","title":"subscript(Int, Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:)-4mqnz","title":"subscript(Int, Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:)-5myi8","title":"subscript(Int, Int, Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:)-8ue6t","title":"subscript(Int, Int, Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:)-12q95","title":"subscript(Int, Int, Int, Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:)-7phv8","title":"subscript(Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:_:)-4zvb9","title":"subscript(Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:_:)-6tko6","title":"subscript(Int, Int, Int, Int, Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:_:_:)-5n0p8","title":"subscript(Int, Int, Int, Int, Int, Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:_:_:)-7wdu","title":"subscript(Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:_:_:_:)-2ds5g","title":"subscript(Int, Int, Int, Int, Int, Int, Int, (UnboundedRange_) -> ()) -> Tensor<Element>","type":"subscript"},{"path":"\/documentation\/nnc\/tensor\/subscript(_:_:_:_:_:_:_:_:)-pdh4","title":"subscript(Int, Int, Int, Int, Int, Int, Int, Range<Int>) -> Tensor<Element>","type":"subscript"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror\/nodataconversion(_:_:)","title":"case noDataConversion(PythonObject, any Any.Type)","type":"case"},{"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror\/nopointer","title":"case noPointer","type":"case"},{"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror\/noshape","title":"case noShape","type":"case"},{"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror\/notnumpy","title":"case notNumpy","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/tensor\/numpyscalarcompatibleerror","title":"Tensor.NumpyScalarCompatibleError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/datatype","title":"var dataType: DataType","type":"property"},{"path":"\/documentation\/nnc\/tensor\/format","title":"var format: TensorFormat","type":"property"},{"path":"\/documentation\/nnc\/tensor\/iscontiguous","title":"var isContiguous: Bool","type":"property"},{"path":"\/documentation\/nnc\/tensor\/istensorview","title":"var isTensorView: Bool","type":"property"},{"path":"\/documentation\/nnc\/tensor\/kind","title":"var kind: DeviceKind","type":"property"},{"path":"\/documentation\/nnc\/tensor\/shape","title":"var shape: TensorShape","type":"property"},{"path":"\/documentation\/nnc\/tensor\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/nnc\/tensor\/strides","title":"var strides: TensorShape","type":"property"}],"path":"\/documentation\/nnc\/tensor\/anytensor-implementations","title":"AnyTensor Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/nnc\/tensor\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nnc\/tensor\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/nnc\/tensor\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"}],"path":"\/documentation\/nnc\/tensor\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensor\/pythonobject","title":"var pythonObject: PythonObject","type":"property"}],"path":"\/documentation\/nnc\/tensor\/pythonconvertible-implementations","title":"PythonConvertible Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/tensor","title":"Tensor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/init(_:)","title":"init([Int])","type":"init"},{"path":"\/documentation\/nnc\/tensorshape\/init(dims:)","title":"init(dims: (Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/dims","title":"var dims: (Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/firstrange(of:)-1nbp7","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/flatmapoffsets(_:)","title":"func flatmapOffsets(Offsets?) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/mapoffsets(_:)","title":"func mapOffsets(Offsets) -> Range<Self.Index>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/nnc\/tensorshape\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/nnc\/tensorshape\/endindex","title":"var endIndex: TensorShape.Index","type":"property"},{"path":"\/documentation\/nnc\/tensorshape\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/nnc\/tensorshape\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/nnc\/tensorshape\/startindex","title":"var startIndex: TensorShape.Index","type":"property"},{"path":"\/documentation\/nnc\/tensorshape\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/convertbyoffset(_:in:)-2oo69","title":"func convertByOffset<C>(Self.Index, in: C) -> C.Index","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/convertbyoffset(_:in:)-6iofp","title":"func convertByOffset<C>(Range<Self.Index>, in: C) -> Range<C.Index>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/firstrange(of:)-10aj","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/index(atoffset:)","title":"func index(atOffset: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/map(_:)-nuhu","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/offset(of:)","title":"func offset(of: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/offset(ofindex:)","title":"func offset(ofIndex: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/offsets(of:)","title":"func offsets(of: Range<Self.Index>) -> Range<Int>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/popfirst()","title":"func popFirst() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/removefirst()","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/removefirst(_:)","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/split(around:)","title":"func split(around: Range<Self.Index>) -> (prefix: Self.SubSequence, Self.SubSequence, suffix: Self.SubSequence)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) throws","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/trydropprefix(_:)","title":"func tryDropPrefix<C>(C) -> Self.SubSequence?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/trydropsuffix(_:)","title":"func tryDropSuffix<C>(C) -> Self.SubSequence?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/subscript(_:)-2mlrf","title":"subscript(TensorShape.Index) -> TensorShape.Element","type":"subscript"},{"path":"\/documentation\/nnc\/tensorshape\/subscript(_:)-5bok2","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/nnc\/tensorshape\/subscript(_:)-6j8oq","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/index","title":"TensorShape.Index","type":"typealias"},{"path":"\/documentation\/nnc\/tensorshape\/indices-swift.typealias","title":"TensorShape.Indices","type":"typealias"},{"path":"\/documentation\/nnc\/tensorshape\/subsequence","title":"TensorShape.SubSequence","type":"typealias"}],"path":"\/documentation\/nnc\/tensorshape\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nnc\/tensorshape\/halfwidthcornerquoted","title":"var halfWidthCornerQuoted: String","type":"property"}],"path":"\/documentation\/nnc\/tensorshape\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/nnc\/tensorshape\/==(_:_:)","title":"static func == (TensorShape, TensorShape) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/tensorshape\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/init(arrayliteral:)","title":"init(arrayLiteral: Int...)","type":"init"}],"path":"\/documentation\/nnc\/tensorshape\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/indices-swift.property","title":"var indices: TensorShape.Indices","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/formindex(after:)","title":"func formIndex(after: inout TensorShape.Index)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/formindex(before:)","title":"func formIndex(before: inout TensorShape.Index)","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/subscript(_:)-1fi8s","title":"subscript(TensorShape.Indices) -> TensorShape.SubSequence","type":"subscript"}],"path":"\/documentation\/nnc\/tensorshape\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/all(_:)","title":"func all((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/any(_:)","title":"func any((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/flatmap(_:)-8abgq","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/flatmap(_:)-hke4","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/map(_:)-40hbi","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/none(_:)","title":"func none((Self.Element) -> Bool) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/nnc\/tensorshape\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshape\/element","title":"TensorShape.Element","type":"typealias"}],"path":"\/documentation\/nnc\/tensorshape\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/tensorshape","title":"TensorShape","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/*(_:_:)-1r7nx","title":"func * (any ModelIOConvertible, Float) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/*(_:_:)-3y9q9","title":"func * <T>(T, Float) -> T","type":"op"},{"path":"\/documentation\/nnc\/*(_:_:)-6342","title":"func * (any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/*(_:_:)-728sb","title":"func * (Float, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/*(_:_:)-8e51t","title":"func * <T>(Float, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/*(_:_:)-8k1wm","title":"func * <T>(T, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-1sprp","title":"func + (any ModelIOConvertible, Float) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-3qwjd","title":"func + (any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-5p5sb","title":"func + <T>(T, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-5pqdd","title":"func + <Element>(Float, DynamicGraph.Tensor<Element>) -> DynamicGraph.Tensor<Element>","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-5yi76","title":"func + <Element>(DynamicGraph.Tensor<Element>, Float) -> DynamicGraph.Tensor<Element>","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-6f478","title":"func + <Element>(Float, DynamicGraph.Group<DynamicGraph.Tensor<Element>>) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-6k6fm","title":"func + <Element>(DynamicGraph.Group<DynamicGraph.Tensor<Element>>, Float) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>","type":"op"},{"path":"\/documentation\/nnc\/+(_:_:)-dwwt","title":"func + (Float, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/-(_:)-5yilj","title":"func - <T>(T) -> T","type":"op"},{"path":"\/documentation\/nnc\/-(_:)-6nifs","title":"func - (any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-26s7l","title":"func - <Element>(Float, DynamicGraph.Group<DynamicGraph.Tensor<Element>>) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-321ox","title":"func - (any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-42ziz","title":"func - <Element>(DynamicGraph.Tensor<Element>, Float) -> DynamicGraph.Tensor<Element>","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-4zkis","title":"func - <T>(T, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-5j9kr","title":"func - (any ModelIOConvertible, Float) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-6zoz6","title":"func - <Element>(DynamicGraph.Group<DynamicGraph.Tensor<Element>>, Float) -> DynamicGraph.Group<DynamicGraph.Tensor<Element>>","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-9qxpb","title":"func - <Element>(Float, DynamicGraph.Tensor<Element>) -> DynamicGraph.Tensor<Element>","type":"op"},{"path":"\/documentation\/nnc\/-(_:_:)-j8hw","title":"func - (Float, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/'.*(_:_:)-6q4of","title":"func .* (any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/'.*(_:_:)-8v4jq","title":"func .* <T>(T, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/'.+(_:_:)-5y93t","title":"func .+ <T>(T, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/'.+(_:_:)-735dv","title":"func .+ (any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/'._(_:_:)-14vkn","title":"func .\/ <T>(T, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/'._(_:_:)-15mdn","title":"func .\/ (any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/_(_:_:)-10m8a","title":"func \/ (any ModelIOConvertible, Float) -> Model.IO","type":"op"},{"path":"\/documentation\/nnc\/_(_:_:)-2gh35","title":"func \/ <T>(T, Float) -> T","type":"op"},{"path":"\/documentation\/nnc\/_(_:_:)-2s535","title":"func \/ <T>(Float, T) -> T","type":"op"},{"path":"\/documentation\/nnc\/_(_:_:)-3041l","title":"func \/ (Float, any ModelIOConvertible) -> Model.IO","type":"op"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/datatype\/bfloat16","title":"case BFloat16","type":"case"},{"path":"\/documentation\/nnc\/datatype\/float16","title":"case Float16","type":"case"},{"path":"\/documentation\/nnc\/datatype\/float32","title":"case Float32","type":"case"},{"path":"\/documentation\/nnc\/datatype\/float64","title":"case Float64","type":"case"},{"path":"\/documentation\/nnc\/datatype\/int32","title":"case Int32","type":"case"},{"path":"\/documentation\/nnc\/datatype\/int64","title":"case Int64","type":"case"},{"path":"\/documentation\/nnc\/datatype\/uint8","title":"case UInt8","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/datatype\/from(ctensorparams:)","title":"static func from(cTensorParams: ccv_nnc_tensor_param_t) -> DataType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/datatype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/datatype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/datatype","title":"DataType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/devicekind\/cpu","title":"case CPU","type":"case"},{"path":"\/documentation\/nnc\/devicekind\/gpu(_:)","title":"case GPU(Int)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/devicekind\/from(ctensorparams:)","title":"static func from(cTensorParams: ccv_nnc_tensor_param_t) -> DeviceKind","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/devicekind\/gpus\/count","title":"static var count: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/devicekind\/gpus\/permute(_:)","title":"static func permute(Int...)","type":"method"}],"path":"\/documentation\/nnc\/devicekind\/gpus","title":"DeviceKind.GPUs","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/devicekind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/nnc\/devicekind\/==(_:_:)","title":"static func == (DeviceKind, DeviceKind) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/devicekind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/devicekind","title":"DeviceKind","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/float16","title":"static let Float16: Functional.GEMMFlag","type":"property"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/float32","title":"static let Float32: Functional.GEMMFlag","type":"property"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/tf32","title":"static let TF32: Functional.GEMMFlag","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/functional\/gemmflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/nnc\/functional\/gemmflag\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/nnc\/functional\/gemmflag\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/nnc\/functional\/gemmflag\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/functional\/gemmflag","title":"Functional.GEMMFlag","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/functional\/relu(_:streamcontext:)","title":"static func ReLU<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/abs(_:streamcontext:)","title":"static func abs<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/add(left:right:leftscalar:rightscalar:streamcontext:)","title":"static func add<T>(left: T, right: T, leftScalar: Float32, rightScalar: Float32, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/argmax(_:axis:streamcontext:)-20f9j","title":"static func argmax(DynamicGraph.AnyTensor, axis: Int, streamContext: StreamContext?) -> DynamicGraph.Tensor<Int32>","type":"method"},{"path":"\/documentation\/nnc\/functional\/argmax(_:axis:streamcontext:)-4u6zw","title":"static func argmax(DynamicGraph.Group<DynamicGraph.AnyTensor>, axis: Int, streamContext: StreamContext?) -> DynamicGraph.Group<DynamicGraph.Tensor<Int32>>","type":"method"},{"path":"\/documentation\/nnc\/functional\/argmin(_:axis:streamcontext:)-5in7t","title":"static func argmin(DynamicGraph.AnyTensor, axis: Int, streamContext: StreamContext?) -> DynamicGraph.Tensor<Int32>","type":"method"},{"path":"\/documentation\/nnc\/functional\/argmin(_:axis:streamcontext:)-630hs","title":"static func argmin(DynamicGraph.Group<DynamicGraph.AnyTensor>, axis: Int, streamContext: StreamContext?) -> DynamicGraph.Group<DynamicGraph.Tensor<Int32>>","type":"method"},{"path":"\/documentation\/nnc\/functional\/averagepool(_:filtersize:hint:streamcontext:)","title":"static func averagePool<T>(T, filterSize: [Int], hint: Hint, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/cmul(left:right:)","title":"static func cmul(left: any ModelIOConvertible, right: any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/cmul(left:right:streamcontext:)","title":"static func cmul<T>(left: T, right: T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/concat(axis:_:flags:)","title":"static func concat(axis: Int, any ModelIOConvertible..., flags: Model.EnableBits) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/concat(axis:_:flags:streamcontext:)","title":"static func concat<T>(axis: Int, T..., flags: Model.EnableBits, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/copy(from:to:streamcontext:)","title":"static func copy<T>(from: T, to: T, streamContext: StreamContext?)","type":"method"},{"path":"\/documentation\/nnc\/functional\/div(left:right:streamcontext:)","title":"static func div<T>(left: T, right: T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/exp(_:streamcontext:)","title":"static func exp<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/indexselect(input:index:streamcontext:)-2ju7w","title":"static func indexSelect<T, U>(input: T, index: U, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/indexselect(input:index:streamcontext:)-w5ii","title":"static func indexSelect<T, U>(input: T, index: U, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/log(_:streamcontext:)","title":"static func log<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/maskedfill(input:mask:equalto:fillwith:streamcontext:)","title":"static func maskedFill<T, U>(input: T, mask: U, equalTo: Float, fillWith: Float, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/matmul(left:right:lefttranspose:righttranspose:)","title":"static func matmul(left: any ModelIOConvertible, right: any ModelIOConvertible, leftTranspose: (Int, Int), rightTranspose: (Int, Int)) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/matmul(left:right:lefttranspose:righttranspose:flags:streamcontext:)","title":"static func matmul<T>(left: T, right: T, leftTranspose: (Int, Int), rightTranspose: (Int, Int), flags: Functional.GEMMFlag, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/max(_:_:)","title":"static func max(any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/max(_:_:streamcontext:)","title":"static func max<T>(T, T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/maxpool(_:filtersize:hint:streamcontext:)","title":"static func maxPool<T>(T, filterSize: [Int], hint: Hint, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/min(_:_:)","title":"static func min(any ModelIOConvertible, any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/min(_:_:streamcontext:)","title":"static func min<T>(T, T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/mul(left:right:scalar:)","title":"static func mul(left: any ModelIOConvertible, right: any ModelIOConvertible, scalar: Float) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/mul(left:right:scalar:streamcontext:)","title":"static func mul<T>(left: T, right: T, scalar: Float32, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/reciprocal(_:streamcontext:)","title":"static func reciprocal<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/scalmul(left:right:streamcontext:)","title":"static func scalmul<T>(left: Float, right: T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/scatteradd(count:_:index:)","title":"static func scatterAdd(count: Int, any ModelIOConvertible, index: any ModelIOConvertible) -> Model.IO","type":"method"},{"path":"\/documentation\/nnc\/functional\/scatteradd(count:input:index:streamcontext:)","title":"static func scatterAdd<T, U>(count: Int, input: T, index: U, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/sigmoid(_:streamcontext:)","title":"static func sigmoid<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/softmax(_:streamcontext:)","title":"static func softmax<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/squareroot(_:streamcontext:)","title":"static func squareRoot<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/sum(_:streamcontext:)-4hluj","title":"static func sum<T>([T], streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/sum(_:streamcontext:)-5cit6","title":"static func sum<T>(T..., streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/swish(_:streamcontext:)","title":"static func swish<T>(T, streamContext: StreamContext?) -> T","type":"method"},{"path":"\/documentation\/nnc\/functional\/tanh(_:streamcontext:)","title":"static func tanh<T>(T, streamContext: StreamContext?) -> T","type":"method"}],"path":"\/documentation\/nnc\/functional","title":"Functional","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/imagejitter\/normalize\/init(mean:std:)","title":"init(mean: [Float], std: [Float])","type":"init"}],"path":"\/documentation\/nnc\/imagejitter\/normalize","title":"ImageJitter.Normalize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/imagejitter\/offset\/init(x:y:)","title":"init(x: Int, y: Int)","type":"init"}],"path":"\/documentation\/nnc\/imagejitter\/offset","title":"ImageJitter.Offset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/imagejitter\/resize\/init(min:max:roundup:)","title":"init(min: Int, max: Int, roundup: Int)","type":"init"}],"path":"\/documentation\/nnc\/imagejitter\/resize","title":"ImageJitter.Resize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nnc\/imagejitter\/size\/init(rows:cols:)","title":"init(rows: Int, cols: Int)","type":"init"}],"path":"\/documentation\/nnc\/imagejitter\/size","title":"ImageJitter.Size","type":"struct"}],"path":"\/documentation\/nnc\/imagejitter","title":"ImageJitter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/reduceop\/max","title":"case max","type":"case"},{"path":"\/documentation\/nnc\/reduceop\/mean","title":"case mean","type":"case"},{"path":"\/documentation\/nnc\/reduceop\/min","title":"case min","type":"case"},{"path":"\/documentation\/nnc\/reduceop\/norm2","title":"case norm2","type":"case"},{"path":"\/documentation\/nnc\/reduceop\/sum","title":"case sum","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/reduceop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/reduceop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/reduceop","title":"ReduceOp","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorformat\/chwn","title":"case CHWN","type":"case"},{"path":"\/documentation\/nnc\/tensorformat\/nchw","title":"case NCHW","type":"case"},{"path":"\/documentation\/nnc\/tensorformat\/nhwc","title":"case NHWC","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorformat\/from(ctensorparams:)","title":"static func from(cTensorParams: ccv_nnc_tensor_param_t) -> TensorFormat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nnc\/tensorformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nnc\/tensorformat","title":"TensorFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nnc\/tensorshapeformat\/c(_:)","title":"case C(Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/chw(_:_:_:)","title":"case CHW(Int, Int, Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/chwn(_:_:_:_:)","title":"case CHWN(Int, Int, Int, Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/hwc(_:_:_:)","title":"case HWC(Int, Int, Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/nc(_:_:)","title":"case NC(Int, Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/nchw(_:_:_:_:)","title":"case NCHW(Int, Int, Int, Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/nhwc(_:_:_:_:)","title":"case NHWC(Int, Int, Int, Int)","type":"case"},{"path":"\/documentation\/nnc\/tensorshapeformat\/wc(_:_:)","title":"case WC(Int, Int)","type":"case"}],"path":"\/documentation\/nnc\/tensorshapeformat","title":"TensorShapeFormat","type":"enum"}],"path":"\/documentation\/nnc","title":"NNC","type":"module"},{"path":"\/documentation\/nncmujococonversion","title":"NNCMuJoCoConversion","type":"module"},{"path":"\/documentation\/nncpythonconversion","title":"NNCPythonConversion","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tensorboard\/summarywriter\/init(logdirectory:comment:)","title":"init(logDirectory: String, comment: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tensorboard\/summarywriter\/addgraph(_:_:walltime:)-6e1cv","title":"func addGraph(String, Model, wallTime: Double)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addgraph(_:_:walltime:)-n8nt","title":"func addGraph(String, DynamicGraph, wallTime: Double)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addhistogram(_:_:step:walltime:displayname:description:)-1k7z6","title":"func addHistogram(String, Tensor<Float>, step: Int, wallTime: Double, displayName: String?, description: String?)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addhistogram(_:_:step:walltime:displayname:description:)-68yl1","title":"func addHistogram(String, DynamicGraph.Tensor<Float>, step: Int, wallTime: Double, displayName: String?, description: String?)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addimage(_:_:step:walltime:displayname:description:)-2fmql","title":"func addImage(String, DynamicGraph.Tensor<Float>, step: Int, wallTime: Double, displayName: String?, description: String?)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addimage(_:_:step:walltime:displayname:description:)-33kyf","title":"func addImage(String, Tensor<Float>, step: Int, wallTime: Double, displayName: String?, description: String?)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addparameters(_:_:step:walltime:)-3eupn","title":"func addParameters(String, Model.Parameters, step: Int, wallTime: Double)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addparameters(_:_:step:walltime:)-7tmx3","title":"func addParameters(String, [Model.Parameters], step: Int, wallTime: Double)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/addscalar(_:_:step:walltime:displayname:description:)","title":"func addScalar<T>(String, T, step: Int, wallTime: Double, displayName: String?, description: String?)","type":"method"},{"path":"\/documentation\/tensorboard\/summarywriter\/close()","title":"func close() throws","type":"method"}],"path":"\/documentation\/tensorboard\/summarywriter","title":"SummaryWriter","type":"struct"}],"path":"\/documentation\/tensorboard","title":"TensorBoard","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}