{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"uniqueConsecutive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","preciseIdentifier":"s:3NNC5ModelC","text":"Model","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","preciseIdentifier":"s:3NNC5ModelC2IOC","text":"IO","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"count","content":[{"inlineContent":[{"text":"How many unique elements there will be roughly.","type":"text"}],"type":"paragraph"}]}]}],"metadata":{"modules":[{"name":"NNC"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"uniqueConsecutive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"Model","kind":"typeIdentifier","preciseIdentifier":"s:3NNC5ModelC"},{"text":".","kind":"text"},{"text":"IO","kind":"typeIdentifier","preciseIdentifier":"s:3NNC5ModelC2IOC"}],"role":"symbol","symbolKind":"method","extendedModule":"NNC","title":"uniqueConsecutive(count:)","externalID":"s:3NNC18ModelIOConvertiblePAAE17uniqueConsecutive5countAA0B0C2IOCSi_tF::SYNTHESIZED::s:3NNC5ModelC2IOC"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/uniqueConsecutive(count:)"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Unique consecutive in the input, it returns two values, the unique values and the counts."}],"variants":[{"paths":["\/documentation\/nnc\/model\/io\/uniqueconsecutive(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.liuliu.s4nnc\/documentation\/NNC","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/ModelIOConvertible-Implementations"]]},"references":{"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO/uniqueConsecutive(count:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"uniqueConsecutive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:3NNC5ModelC","text":"Model","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:3NNC5ModelC2IOC","text":"IO","kind":"typeIdentifier"}],"url":"\/documentation\/nnc\/model\/io\/uniqueconsecutive(count:)","role":"symbol","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/uniqueConsecutive(count:)","title":"uniqueConsecutive(count:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Unique consecutive in the input, it returns two values, the unique values and the counts."}]},"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO/ModelIOConvertible-Implementations":{"title":"ModelIOConvertible Implementations","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/ModelIOConvertible-Implementations","type":"topic","abstract":[],"url":"\/documentation\/nnc\/model\/io\/modelioconvertible-implementations","kind":"article","role":"collectionGroup"},"doc://org.liuliu.s4nnc/documentation/NNC":{"title":"NNC","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC","type":"topic","abstract":[],"url":"\/documentation\/nnc","kind":"symbol","role":"collection"},"doc://org.liuliu.s4nnc/documentation/NNC/Model":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Model","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Model","kind":"identifier"}],"abstract":[{"text":"A model is a base class for stateful operations on a dynamic graph. It can be","type":"text"},{"text":" ","type":"text"},{"text":"use to construct computations statically, thus, more efficient.","type":"text"}],"kind":"symbol","url":"\/documentation\/nnc\/model","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","type":"topic","title":"Model"},"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO":{"navigatorTitle":[{"text":"IO","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IO","kind":"identifier"}],"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","type":"topic","role":"symbol","title":"Model.IO","kind":"symbol","url":"\/documentation\/nnc\/model\/io","abstract":[{"text":"A IO class represent the abstract input \/ output for a model. It can correspond","type":"text"},{"text":" ","type":"text"},{"text":"to one or more tensors when the model is materialized.","type":"text"}]}}}