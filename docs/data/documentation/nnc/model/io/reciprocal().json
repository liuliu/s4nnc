{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/reciprocal()"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/nnc\/model\/io\/reciprocal()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"reciprocal()","extendedModule":"NNC","externalID":"s:3NNC18ModelIOConvertiblePAAE10reciprocalAA0B0C2IOCyF::SYNTHESIZED::s:3NNC5ModelC2IOC","modules":[{"name":"NNC"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reciprocal","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:3NNC5ModelC","text":"Model","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:3NNC5ModelC2IOC","text":"IO","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/org.liuliu.s4nnc\/documentation\/NNC","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/ModelIOConvertible-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","text":"Model","kind":"typeIdentifier","preciseIdentifier":"s:3NNC5ModelC"},{"text":".","kind":"text"},{"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","text":"IO","kind":"typeIdentifier","preciseIdentifier":"s:3NNC5ModelC2IOC"}]}]}],"abstract":[{"text":"Compute the reciprocal for a model IO.","type":"text"}],"references":{"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO/ModelIOConvertible-Implementations":{"title":"ModelIOConvertible Implementations","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/ModelIOConvertible-Implementations","type":"topic","abstract":[],"url":"\/documentation\/nnc\/model\/io\/modelioconvertible-implementations","kind":"article","role":"collectionGroup"},"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO/reciprocal()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reciprocal","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:3NNC5ModelC","text":"Model","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:3NNC5ModelC2IOC","text":"IO","kind":"typeIdentifier"}],"url":"\/documentation\/nnc\/model\/io\/reciprocal()","role":"symbol","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO\/reciprocal()","title":"reciprocal()","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Compute the reciprocal for a model IO."}]},"doc://org.liuliu.s4nnc/documentation/NNC/Model":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Model","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Model","kind":"identifier"}],"abstract":[{"text":"A model is a base class for stateful operations on a dynamic graph. It can be","type":"text"},{"text":" ","type":"text"},{"text":"use to construct computations statically, thus, more efficient.","type":"text"}],"kind":"symbol","url":"\/documentation\/nnc\/model","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","type":"topic","title":"Model"},"doc://org.liuliu.s4nnc/documentation/NNC":{"title":"NNC","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC","type":"topic","abstract":[],"url":"\/documentation\/nnc","kind":"symbol","role":"collection"},"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO":{"navigatorTitle":[{"text":"IO","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IO","kind":"identifier"}],"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","type":"topic","role":"symbol","title":"Model.IO","kind":"symbol","url":"\/documentation\/nnc\/model\/io","abstract":[{"text":"A IO class represent the abstract input \/ output for a model. It can correspond","type":"text"},{"text":" ","type":"text"},{"text":"to one or more tensors when the model is materialized.","type":"text"}]}}}