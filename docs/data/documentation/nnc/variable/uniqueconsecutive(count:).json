{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"uniqueConsecutive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Model","preciseIdentifier":"s:3NNC5ModelC","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"IO","preciseIdentifier":"s:3NNC5ModelC2IOC","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"count","content":[{"inlineContent":[{"text":"How many unique elements there will be roughly.","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Variable\/uniqueConsecutive(count:)"},"abstract":[{"text":"Unique consecutive in the input, it returns two values, the unique values and the counts.","type":"text"}],"metadata":{"extendedModule":"NNC","role":"symbol","externalID":"s:3NNC18ModelIOConvertiblePAAE17uniqueConsecutive5countAA0B0C2IOCSi_tF::SYNTHESIZED::s:3NNC8VariableC","roleHeading":"Instance Method","title":"uniqueConsecutive(count:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"uniqueConsecutive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Model","preciseIdentifier":"s:3NNC5ModelC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"IO","preciseIdentifier":"s:3NNC5ModelC2IOC","kind":"typeIdentifier"}],"modules":[{"name":"NNC"}],"symbolKind":"method"},"sections":[],"variants":[{"paths":["\/documentation\/nnc\/variable\/uniqueconsecutive(count:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/org.liuliu.s4nnc\/documentation\/NNC","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Variable","doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Variable\/ModelIOConvertible-Implementations"]]},"references":{"doc://org.liuliu.s4nnc/documentation/NNC/Model":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Model","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Model","kind":"identifier"}],"abstract":[{"text":"A model is a base class for stateful operations on a dynamic graph. It can be","type":"text"},{"text":" ","type":"text"},{"text":"use to construct computations statically, thus, more efficient.","type":"text"}],"kind":"symbol","url":"\/documentation\/nnc\/model","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model","type":"topic","title":"Model"},"doc://org.liuliu.s4nnc/documentation/NNC/Variable/uniqueConsecutive(count:)":{"abstract":[{"type":"text","text":"Unique consecutive in the input, it returns two values, the unique values and the counts."}],"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Variable\/uniqueConsecutive(count:)","role":"symbol","type":"topic","kind":"symbol","title":"uniqueConsecutive(count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"uniqueConsecutive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:3NNC5ModelC","kind":"typeIdentifier","text":"Model"},{"kind":"text","text":"."},{"preciseIdentifier":"s:3NNC5ModelC2IOC","kind":"typeIdentifier","text":"IO"}],"url":"\/documentation\/nnc\/variable\/uniqueconsecutive(count:)"},"doc://org.liuliu.s4nnc/documentation/NNC/Variable":{"abstract":[{"type":"text","text":"Variable model."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Variable","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Variable","title":"Variable","type":"topic","navigatorTitle":[{"text":"Variable","kind":"identifier"}],"url":"\/documentation\/nnc\/variable"},"doc://org.liuliu.s4nnc/documentation/NNC/Model/IO":{"navigatorTitle":[{"text":"IO","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IO","kind":"identifier"}],"identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Model\/IO","type":"topic","role":"symbol","title":"Model.IO","kind":"symbol","url":"\/documentation\/nnc\/model\/io","abstract":[{"text":"A IO class represent the abstract input \/ output for a model. It can correspond","type":"text"},{"text":" ","type":"text"},{"text":"to one or more tensors when the model is materialized.","type":"text"}]},"doc://org.liuliu.s4nnc/documentation/NNC/Variable/ModelIOConvertible-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/nnc\/variable\/modelioconvertible-implementations","kind":"article","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC\/Variable\/ModelIOConvertible-Implementations","title":"ModelIOConvertible Implementations"},"doc://org.liuliu.s4nnc/documentation/NNC":{"title":"NNC","identifier":"doc:\/\/org.liuliu.s4nnc\/documentation\/NNC","type":"topic","abstract":[],"url":"\/documentation\/nnc","kind":"symbol","role":"collection"}}}